{"version":3,"sources":["E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/Gallery.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/mixins.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/BoxInfo.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/style/mixins.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/Home.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/style/mixins.scss"],"names":[],"mappings":"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","file":"3.902bf67a.chunk.css","sourcesContent":["@import 'src/style/shared.scss';\n\n.Gallery {\n  position: relative;\n  float: left;\n  width: 100%;\n  background-color: transparent;\n  z-index: 50;\n  color: $green;\n  padding: px-to-rem(20) $navbar-padding-mobile;\n\n  @media (min-width: $layout-large) {\n    padding: px-to-rem(20) $navbar-padding-desktop;\n  }\n\n  &-container {\n    position: relative;\n    float: left;\n    width: 100%;\n    margin: px-to-rem(0) 0 0 0;\n    // border: 1px $green solid;\n    padding: px-to-rem(20);\n    // background-color: $blacktint;\n\n    @media (min-width: $layout-large) {\n      padding: px-to-rem(30);\n    }\n  }\n\n  &-content {\n    position: relative;\n    float: left;\n    width: 100%;\n\n    .gallery-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: px-to-rem(10);\n      grid-auto-flow: dense;\n\n      .gallery-item {\n        flex: 1;\n        padding: px-to-rem(20);\n        text-decoration: none;\n        color: $white;\n        @include font-regular();\n        background-color: transparent;\n\n        &:hover {\n          background-color: $greentint;\n        }\n\n        a {\n          text-decoration: none;\n        }\n\n        .gallery-item-content {\n          position: relative;\n          width: 100%;\n        }\n\n        .image-container {\n          position: relative;\n          width: 100%;\n          overflow: hidden;\n\n          &:before {\n            content: '';\n            float: left;\n            padding-top: 100%;\n          }\n\n          img {\n            position: absolute;\n            left: 0;\n            top: 0;\n            object-fit: cover;\n            object-position: center center;\n            width: 100%;\n            height: 100%;\n            min-height: 100%;\n            min-width: 100%;\n            user-select: none;\n          }\n        }\n\n        .gallery-item-title {\n          color: $green;\n          font-size: px-to-rem(22);\n          margin-bottom: px-to-rem(20);\n          text-overflow: ellipsis;\n          white-space: nowrap;\n        }\n\n        .gallery-item-info-title {\n          font-size: px-to-rem(30);\n          margin: 0 0 px-to-rem(20) 0;\n          text-overflow: ellipsis;\n          white-space: nowrap;\n\n          @media (min-width: $layout-large) {\n            font-size: px-to-rem(18);\n          }\n        }\n\n        .gallery-item-info-bid {\n          @include font-special();\n          font-size: px-to-rem(36);\n          color: $green;\n          margin: px-to-rem(10) 0 px-to-rem(10) 0;\n\n          @media (min-width: $layout-large) {\n            font-size: px-to-rem(24);\n          }\n        }\n\n        .gallery-item-info-button {\n          @include item-button;\n          text-transform: uppercase;\n          width: 100%;\n          margin-top: px-to-rem(20);\n\n          padding: px-to-rem(12) px-to-rem(3) px-to-rem(10) px-to-rem(3);\n          font-size: px-to-rem(24);\n\n          @media (min-width: $layout-large) {\n            padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n            font-size: px-to-rem(16);\n          }\n\n          &.active {\n            text-transform: uppercase;\n          }\n        }\n      }\n    }\n  }\n\n  &.Home-galery {\n    position: relative;\n    float: left;\n    width: 100%;\n    box-sizing: border-box;\n    background-color: transparent;\n    background-color: $blacktint;\n\n    &.Gallery {\n      padding: px-to-rem(20);\n      border: 1px $green solid;\n\n      @media (min-width: $layout-large) {\n        padding: px-to-rem(30);\n      }\n\n      .Gallery-container {\n        background-color: transparent;\n        border: none;\n        margin: 0;\n        padding: 0;\n\n        @media (min-width: $layout-large) {\n          padding: 0;\n        }\n      }\n\n      .gallery-list {\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\n        .gallery-item {\n          padding: px-to-rem(10);\n          background-color: $blacktint;\n\n          .gallery-item-title {\n            color: $white;\n            font-size: px-to-rem(24);\n\n            @media (min-width: $layout-large) {\n              font-size: px-to-rem(14);\n            }\n          }\n\n          .gallery-item-info-title {\n            font-size: px-to-rem(10);\n            margin: 0;\n          }\n\n          &:hover {\n            background-color: $greentint;\n          }\n        }\n      }\n\n      .Gallery-header {\n        position: relative;\n        float: left;\n        width: 100%;\n\n        h1 {\n          @include title-mobile;\n\n          @media (min-width: $layout-large) {\n            @include title;\n          }\n        }\n      }\n    }\n  }\n}\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$whitetint: rgba(255, 255, 255, 0.4);\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#429900, 0.5);\n\n$pink: #fa00ff;\n$gray-tint: rgba(255, 255, 255, 0.3);\n$gray: rgba(255, 255, 255, 1);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n$tint-dark: rgba(#000000, 0.2);\n$tint-light: rgba(#ffffff, 0.8);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-banner() {\n  font-family: 'Mitr', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  background-color: transparent;\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin title-mobile {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $white;\n  background-color: $pink;\n  font-size: px-to-rem(30);\n  line-height: px-to-rem(50);\n  text-align: center;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin borderless-button {\n  background-color: transparent; //$black;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  padding: px-to-rem(8) px-to-rem(20) px-to-rem(6) px-to-rem(20);\n  background-color: $gray;\n  color: $white;\n  border-top: 3px solid $tint-light;\n  border-right: 3px solid $tint-dark;\n  border-bottom: 3px solid $tint-dark;\n  border-left: 3px solid $tint-light;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $gray;\n    color: $black;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $black;\n  }\n}\n","@import 'src/style/shared.scss';\n\n.box-info {\n  width: 100%;\n  box-sizing: border-box;\n  height: calc(100% - 6rem);\n\n  .box-info-bid {\n    display: flex;\n    flex-direction: row;\n    align-content: stretch;\n    height: 100%;\n  }\n\n  .box-info-asset {\n    @include font-light();\n    width: 100%;\n\n    li {\n      margin: px-to-rem(20) 0 0 0;\n      list-style: none;\n\n      ul {\n        width: 100%;\n        position: relative;\n        float: left;\n        text-align: left;\n\n        h1 {\n          position: relative;\n          color: $white;\n          width: 100%;\n          min-width: 130px;\n          font-size: px-to-rem(16);\n          line-height: px-to-rem(32);\n          margin: 0;\n          word-wrap: break-word;\n        }\n\n        p {\n          position: relative;\n          width: 100%;\n          color: $green;\n          font-size: px-to-rem(16);\n          line-height: px-to-rem(20);\n          margin: 0;\n          word-wrap: break-word;\n        }\n      }\n    }\n\n    @media (min-width: $layout-large) {\n      li {\n        ul {\n          h1 {\n            position: relative;\n            float: left;\n            width: 10%;\n            font-size: px-to-rem(10);\n            line-height: px-to-rem(20);\n          }\n\n          p {\n            position: relative;\n            float: left;\n            width: 60%;\n            font-size: px-to-rem(10);\n            line-height: px-to-rem(20);\n          }\n        }\n      }\n    }\n  }\n\n  .box-info-image-overlay {\n    cursor: pointer;\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n\n    .box-info-image-overlay-ico {\n      position: absolute;\n      top: 6%;\n      right: 6%;\n      width: 15%;\n      height: 15%;\n      border-radius: 50%;\n      background-color: $green;\n      background-image: url('#{$base-image-path}img_click.png');\n      background-repeat: no-repeat;\n      background-size: 100% 100%;\n      background-position: center;\n      transition: background-size 0.1s ease-out, transform 0.08s ease-out;\n    }\n\n    p {\n      position: absolute;\n      bottom: px-to-rem(30);\n      width: 100%;\n      text-align: center;\n      font-size: px-to-rem(32);\n      color: $pink;\n      margin: 0;\n      -webkit-text-stroke: 2px $green;\n      transition: transform 0.1s ease-out;\n\n      @media (min-width: $layout-large) {\n        bottom: px-to-rem(16);\n        font-size: px-to-rem(18);\n        -webkit-text-stroke: 1px $green;\n      }\n    }\n\n    &:hover {\n      .box-info-image-overlay-ico {\n        background-size: 120% 120%;\n        transform: rotate(20deg);\n      }\n\n      p {\n        transform: scale(1.2);\n      }\n    }\n  }\n\n  .box-info-image {\n    position: relative;\n    display: none;\n    visibility: hidden;\n    width: 30%;\n    background-position: center center;\n    overflow: hidden;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      object-position: center;\n      min-height: 100%;\n      min-width: 100%;\n    }\n\n    @media (min-width: $layout-large) {\n      display: block;\n      visibility: visible;\n    }\n  }\n\n  .box-info-data {\n    width: 100%;\n    padding: 0 px-to-rem(10) 0 px-to-rem(10);\n\n    @media (min-width: $layout-large) {\n      width: 70%;\n      padding: 0 px-to-rem(20) 0 px-to-rem(30);\n    }\n\n    .box-info-data-image {\n      position: relative;\n      display: block;\n      visibility: visible;\n      width: 100%;\n      background-position: center center;\n      overflow: hidden;\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        object-position: center;\n        min-height: 100%;\n        min-width: 100%;\n      }\n\n      @media (min-width: $layout-large) {\n        display: none;\n        visibility: hidden;\n      }\n    }\n\n    .box-info-data-title {\n      @include font-title();\n      position: relative;\n      float: left;\n      width: 100%;\n      font-weight: 100;\n      box-sizing: border-box;\n      margin: px-to-rem(-5) 0 px-to-rem(5) 0;\n\n      text-align: center;\n      font-size: px-to-rem(24);\n\n      @media (min-width: $layout-large) {\n        text-align: left;\n        font-size: px-to-rem(30);\n      }\n    }\n\n    .box-info-data-edition,\n    .box-info-desc,\n    .box-info-status-top-title,\n    .box-info-status-bid-title {\n      position: relative;\n      float: left;\n      width: 100%;\n      color: $white;\n\n      text-align: center;\n      font-size: px-to-rem(18);\n      margin: px-to-rem(8) 0 px-to-rem(20) 0;\n\n      @media (min-width: $layout-large) {\n        text-align: left;\n        font-size: px-to-rem(10);\n        margin: 0;\n      }\n    }\n\n    .box-info-desc {\n      font-size: px-to-rem(16);\n      margin: px-to-rem(30) 0 px-to-rem(20) 0;\n\n      @media (min-width: $layout-large) {\n        margin: px-to-rem(20) 0 px-to-rem(20) 0;\n        font-size: px-to-rem(10);\n      }\n    }\n\n    .box-info-status {\n      position: relative;\n      float: left;\n      width: 100%;\n\n      @media (min-width: $layout-large) {\n        width: auto;\n        position: absolute;\n        bottom: px-to-rem(30);\n      }\n    }\n\n    .box-info-status-top {\n      position: relative;\n      float: left;\n      width: 100%;\n      margin-top: 10px;\n\n      .box-info-box {\n        position: relative;\n        float: left;\n        height: 100px;\n        box-sizing: border-box;\n\n        border-left: 0;\n        padding-left: 0;\n        padding-right: 0;\n        width: 100%;\n\n        @media (min-width: $layout-large) {\n          width: auto;\n        }\n\n        &:first-child {\n          border-left: none;\n          padding-left: 0;\n        }\n\n        &:last-child {\n          max-width: 100%;\n          padding-right: 0;\n        }\n\n        p {\n          float: none;\n        }\n\n        &.single {\n          max-width: 100%;\n        }\n\n        @media (min-width: $layout-large) {\n          border-left: 1px solid $whitetint;\n          padding-left: px-to-rem(30);\n          padding-right: px-to-rem(30);\n          max-width: 50%;\n\n          &:first-child {\n            border-left: none;\n            padding-left: 0;\n          }\n\n          &:last-child {\n            max-width: 80%;\n            padding-right: 0;\n          }\n\n          p {\n            float: none;\n          }\n\n          &.single {\n            max-width: 80%;\n          }\n        }\n      }\n\n      .box-info-status-top-title {\n        margin-bottom: px-to-rem(10);\n      }\n\n      .box-info-status-top-bid {\n        @include font-special();\n        font-size: px-to-rem(24);\n        height: px-to-rem(28);\n        color: $green;\n        margin: 0;\n      }\n\n      .box-info-status-info {\n        position: relative;\n        float: left;\n        width: 100%;\n        margin-top: px-to-rem(14);\n        margin-bottom: 0;\n        color: $gray-tint;\n        font-size: px-to-rem(10);\n\n        text-align: center;\n\n        @media (min-width: $layout-large) {\n          text-align: left;\n        }\n      }\n    }\n\n    .box-info-status-bottom {\n      position: relative;\n      float: left;\n      width: 100%;\n      bottom: auto;\n      margin-top: px-to-rem(30);\n\n      @media (min-width: $layout-large) {\n        margin-top: 50px;\n      }\n\n      .box-info-status-bid {\n        position: relative;\n        float: left;\n        margin-left: px-to-rem(15);\n      }\n\n      .box-info-button {\n        position: relative;\n        float: left;\n        @include main-button;\n        text-transform: uppercase;\n        text-decoration: none;\n        width: 45%;\n\n        @media (min-width: $layout-large) {\n          min-width: 200px;\n          max-width: 280px;\n        }\n\n        &.cta {\n          @include main-button-cta;\n          width: 100%;\n          margin: 0 px-to-rem(20) px-to-rem(20) 0;\n          font-size: px-to-rem(30);\n\n          @media (min-width: $layout-large) {\n            width: 50%;\n            margin: 0 px-to-rem(20) px-to-rem(20) 0;\n            font-size: px-to-rem(16);\n          }\n        }\n      }\n    }\n  }\n}\n\n.box-info.single {\n  .box-info-image {\n    width: 30%;\n    min-width: 300px;\n    max-width: 400px;\n    border: 2px $green solid;\n    align-self: stretch;\n    transition: border 0.15s ease-out;\n\n    &.preview {\n      &:hover {\n        border: 8px $green solid;\n      }\n    }\n  }\n\n  .box-info-data {\n    h2 {\n      font-size: px-to-rem(35);\n    }\n\n    .box-info-desc {\n      font-size: px-to-rem(14);\n      line-height: px-to-rem(18);\n\n      b {\n        color: $green;\n        font-weight: normal;\n      }\n    }\n\n    .box-info-status {\n      position: relative;\n      float: left;\n      width: 100%;\n\n      @media (min-width: $layout-large) {\n        position: relative;\n        float: left;\n        width: 100%;\n        bottom: auto;\n      }\n    }\n\n    .box-info-status-bid {\n      display: none;\n      visibility: hidden;\n\n      .box-info-status-bid-title {\n        font-size: px-to-rem(12);\n        margin-bottom: px-to-rem(5);\n      }\n\n      .box-info-status-bid-bid {\n        @include font-special();\n        font-size: px-to-rem(21);\n        color: $pink;\n      }\n\n      @media (min-width: $layout-large) {\n        display: block;\n        visibility: visible;\n      }\n    }\n  }\n}\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-banner() {\n  font-family: 'Mitr', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  background-color: transparent;\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin title-mobile {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $white;\n  background-color: $pink;\n  font-size: px-to-rem(30);\n  line-height: px-to-rem(50);\n  text-align: center;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin borderless-button {\n  background-color: transparent; //$black;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  padding: px-to-rem(8) px-to-rem(20) px-to-rem(6) px-to-rem(20);\n  background-color: $gray;\n  color: $white;\n  border-top: 3px solid $tint-light;\n  border-right: 3px solid $tint-dark;\n  border-bottom: 3px solid $tint-dark;\n  border-left: 3px solid $tint-light;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $gray;\n    color: $black;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $black;\n  }\n}\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$whitetint: rgba(255, 255, 255, 0.4);\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#429900, 0.5);\n\n$pink: #fa00ff;\n$gray-tint: rgba(255, 255, 255, 0.3);\n$gray: rgba(255, 255, 255, 1);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n$tint-dark: rgba(#000000, 0.2);\n$tint-light: rgba(#ffffff, 0.8);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","@import 'src/style/shared.scss';\n\n.Home {\n  position: relative;\n  float: left;\n  text-align: center;\n  padding: px-to-rem(20) $navbar-padding-mobile;\n  z-index: 50;\n\n  @media (min-width: $layout-large) {\n    padding: px-to-rem(20) $navbar-padding-desktop;\n  }\n\n  &-Welcome {\n    position: relative;\n    float: left;\n    width: 100%;\n    background-color: transparent;\n    padding: px-to-rem(20) px-to-rem(20);\n    color: $green;\n    border: 1px $green solid;\n    text-align: left;\n\n    b {\n      color: $pink;\n    }\n  }\n\n  &-header {\n    position: relative;\n    float: left;\n    width: 100%;\n    margin: px-to-rem(0) 0 0 0;\n    background-color: transparent;\n    padding: px-to-rem(20) 0;\n    color: $green;\n\n    @media (min-width: $layout-large) {\n      max-height: 700px;\n      height: 700px;\n    }\n\n    .home-header-wrapper {\n      position: relative;\n      float: left;\n      width: 100%;\n      height: 100%;\n    }\n\n    .home-box {\n      position: relative;\n      float: left;\n      border: 1px $green solid;\n      box-sizing: border-box;\n      color: $green;\n      background-color: $blacktint;\n\n      &.small {\n        width: 100%;\n        height: calc(50% - #{px-to-rem(10)});\n\n        &:first-child {\n          margin-bottom: px-to-rem(20);\n        }\n      }\n    }\n\n    .home-header-container {\n      position: relative;\n      float: left;\n\n      &.left {\n        padding: px-to-rem(20) $navbar-padding-mobile;\n        box-sizing: border-box;\n        width: 100%;\n        height: 100%;\n\n        @media (min-width: $layout-large) {\n          padding: px-to-rem(30) $navbar-padding-desktop;\n          margin-right: px-to-rem(20);\n        }\n\n        h1 {\n          @include title-mobile;\n\n          @media (min-width: $layout-large) {\n            @include title;\n          }\n        }\n      }\n\n      &.right {\n        position: relative;\n        float: left;\n        width: 100%;\n        height: px-to-rem(450);\n        margin-top: px-to-rem(20);\n      }\n\n      @media (min-width: $layout-large) {\n        &.left {\n          width: calc(70% - #{px-to-rem(20)});\n        }\n\n        &.right {\n          margin-top: 0;\n          width: 30%;\n          height: 100%;\n        }\n      }\n    }\n  }\n}\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$whitetint: rgba(255, 255, 255, 0.4);\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#429900, 0.5);\n\n$pink: #fa00ff;\n$gray-tint: rgba(255, 255, 255, 0.3);\n$gray: rgba(255, 255, 255, 1);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n$tint-dark: rgba(#000000, 0.2);\n$tint-light: rgba(#ffffff, 0.8);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-banner() {\n  font-family: 'Mitr', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  background-color: transparent;\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin title-mobile {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $white;\n  background-color: $pink;\n  font-size: px-to-rem(30);\n  line-height: px-to-rem(50);\n  text-align: center;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin borderless-button {\n  background-color: transparent; //$black;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  padding: px-to-rem(8) px-to-rem(20) px-to-rem(6) px-to-rem(20);\n  background-color: $gray;\n  color: $white;\n  border-top: 3px solid $tint-light;\n  border-right: 3px solid $tint-dark;\n  border-bottom: 3px solid $tint-dark;\n  border-left: 3px solid $tint-light;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $gray;\n    color: $black;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $black;\n  }\n}\n"]}