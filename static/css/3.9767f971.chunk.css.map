{"version":3,"sources":["E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/Gallery.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/mixins.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/BoxInfo.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/style/mixins.scss","E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/components/BoxInfo/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/Home.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/pages/Home/E:/projects/fakeArtits/live4ever/src/style/mixins.scss"],"names":[],"mappings":"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","file":"3.9767f971.chunk.css","sourcesContent":["@import 'src/style/shared.scss';\r\n\r\n.Gallery {\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  z-index: 50;\r\n  color: $green;\r\n  padding: px-to-rem(20) $navbar-padding-mobile;\r\n\r\n  @media (min-width: $layout-large) {\r\n    padding: px-to-rem(20) $navbar-padding-desktop;\r\n  }\r\n\r\n  &-container {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    margin: px-to-rem(0) 0 0 0;\r\n    // border: 1px $green solid;\r\n    padding: px-to-rem(20);\r\n    // background-color: $blacktint;\r\n\r\n    @media (min-width: $layout-large) {\r\n      padding: px-to-rem(30);\r\n    }\r\n  }\r\n\r\n  &-content {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n\r\n    .gallery-list {\r\n      display: grid;\r\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n      gap: px-to-rem(10);\r\n      grid-auto-flow: dense;\r\n\r\n      .gallery-item {\r\n        flex: 1;\r\n        padding: px-to-rem(20);\r\n        text-decoration: none;\r\n        color: $white;\r\n        @include font-regular();\r\n        background-color: transparent;\r\n\r\n        &:hover {\r\n          background-color: $greentint;\r\n        }\r\n\r\n        a {\r\n          text-decoration: none;\r\n        }\r\n\r\n        img {\r\n          width: 100%;\r\n        }\r\n\r\n        .gallery-item-title {\r\n          color: $green;\r\n          font-size: px-to-rem(22);\r\n          margin-bottom: px-to-rem(20);\r\n        }\r\n\r\n        .gallery-item-info-title {\r\n          font-size: px-to-rem(18);\r\n          margin: 0 0 px-to-rem(20) 0;\r\n        }\r\n\r\n        .gallery-item-info-bid {\r\n          @include font-special();\r\n          font-size: px-to-rem(24);\r\n          color: $green;\r\n          margin: px-to-rem(10) 0 px-to-rem(10) 0;\r\n        }\r\n\r\n        .gallery-item-info-button {\r\n          @include item-button;\r\n          width: 100%;\r\n          margin-top: px-to-rem(20);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  &.Home-galery {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    background-color: transparent;\r\n    background-color: $blacktint;\r\n\r\n    &.Gallery {\r\n      padding: px-to-rem(20);\r\n      border: 1px $green solid;\r\n\r\n      @media (min-width: $layout-large) {\r\n        padding: px-to-rem(30);\r\n      }\r\n\r\n      .Gallery-container {\r\n        background-color: transparent;\r\n        border: none;\r\n        margin: 0;\r\n        padding: 0;\r\n\r\n        @media (min-width: $layout-large) {\r\n          padding: 0;\r\n        }\r\n      }\r\n\r\n      .gallery-list {\r\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n\r\n        .gallery-item {\r\n          padding: px-to-rem(10);\r\n          background-color: $blacktint;\r\n\r\n          .gallery-item-title {\r\n            color: $white;\r\n            font-size: px-to-rem(14);\r\n          }\r\n\r\n          .gallery-item-info-title {\r\n            font-size: px-to-rem(10);\r\n            margin: 0;\r\n          }\r\n\r\n          &:hover {\r\n            background-color: $greentint;\r\n          }\r\n        }\r\n      }\r\n\r\n      .Gallery-header {\r\n        position: relative;\r\n        float: left;\r\n        width: 100%;\r\n\r\n        h1 {\r\n          @include title;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#42ff00, 0.3);\n$pink: #fa00ff;\n$gray: rgba(255, 255, 255, 0.3);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  position: absolute;\n  display: inline-block;\n  margin: 0 auto;\n  width: 20%;\n  text-align: center;\n  top: 70%;\n  left: 40%;\n  font-size: 120%;\n  padding-top: 6px;\n  background-color: $gray;\n  color: $white;\n  border-top: 4px solid $white;\n  border-right: 4px solid $greentint-dark;\n  border-bottom: 4px solid $greentint-dark;\n  border-left: 4px solid $white;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $green;\n    color: $pink;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $pink;\n  }\n}\n","@import 'src/style/shared.scss';\n\n.box-info {\n  width: 100%;\n  box-sizing: border-box;\n\n  .box-info-bid {\n    display: flex;\n    flex-direction: row;\n    align-content: stretch;\n  }\n\n  .box-info-asset {\n    @include font-light();\n    width: 100%;\n\n    li {\n      margin: px-to-rem(20) 0 0 0;\n      list-style: none;\n\n      ul {\n        width: 100%;\n        position: relative;\n        float: left;\n        text-align: left;\n\n        h1 {\n          position: relative;\n          float: left;\n          color: $white;\n          width: 10%;\n          min-width: 130px;\n          font-size: px-to-rem(10);\n          line-height: px-to-rem(20);\n          margin: 0;\n        }\n\n        p {\n          position: relative;\n          float: left;\n          width: 60%;\n          color: $green;\n          font-size: px-to-rem(10);\n          line-height: px-to-rem(20);\n          margin: 0;\n        }\n      }\n    }\n  }\n\n  .box-info-image {\n    width: 30%;\n    background-position: center center;\n    overflow: hidden;\n\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n      object-position: center;\n      min-height: 100%;\n      min-width: 100%;\n    }\n  }\n\n  .box-info-data {\n    width: 70%;\n    padding: 0 px-to-rem(20) 0 px-to-rem(30);\n\n    h2 {\n      @include font-title();\n      position: relative;\n      float: left;\n      width: 100%;\n      font-weight: 100;\n      text-align: left;\n      box-sizing: border-box;\n      font-size: px-to-rem(30);\n      margin: px-to-rem(-5) 0 px-to-rem(5) 0;\n    }\n\n    p {\n      position: relative;\n      float: left;\n      width: 100%;\n      color: $white;\n      text-align: left;\n      font-size: px-to-rem(10);\n      margin: 0;\n\n      &.box-info-desc {\n        margin: px-to-rem(20) 0 px-to-rem(20) 0;\n      }\n    }\n\n    .box-info-status {\n      position: relative;\n      float: left;\n    }\n\n    .box-info-status-top {\n      position: relative;\n      float: left;\n      width: 100%;\n      margin-top: 10px;\n\n      ul {\n        position: relative;\n        float: left;\n        width: 100%;\n\n        li {\n          position: relative;\n          float: left;\n          height: 110px;\n          max-width: 50%;\n          box-sizing: border-box;\n          border-left: 1px solid $white;\n          padding-left: px-to-rem(30);\n          padding-right: px-to-rem(30);\n\n          &:first-child {\n            border-left: none;\n            padding-left: 0;\n          }\n\n          &:last-child {\n            padding-right: 0;\n          }\n\n          p {\n            float: none;\n          }\n\n          &.single {\n            max-width: 33.333%;\n          }\n\n          ul {\n            position: relative;\n            float: left;\n            width: 100%;\n\n            li {\n              position: relative;\n              float: left;\n              padding: 0;\n              border-left: none;\n              height: auto;\n              text-align: left;\n              width: 28%;\n              padding-right: px-to-rem(10);\n\n              &.counter-hour {\n                width: 35%;\n                padding-right: px-to-rem(40);\n                text-align: right;\n              }\n\n              &.counter-info-hour {\n                width: 35%;\n                padding-right: px-to-rem(40);\n              }\n            }\n          }\n        }\n      }\n\n      .box-info-status-top-title {\n        margin-bottom: px-to-rem(10);\n      }\n\n      .box-info-status-top-bid {\n        @include font-special();\n        font-size: px-to-rem(24);\n        color: $green;\n        margin: 0;\n      }\n\n      .box-info-status-top-counter {\n        @include font-special();\n        font-size: px-to-rem(24);\n        color: $green;\n      }\n\n      .box-info-status-info {\n        position: relative;\n        float: left;\n        width: 100%;\n        margin-top: 15px;\n        color: $gray;\n        text-align: left;\n        font-size: px-to-rem(12);\n      }\n    }\n\n    .box-info-status-bottom {\n      position: relative;\n      float: left;\n      width: 100%;\n      margin-top: 80px;\n\n      .box-info-status-bid {\n        position: relative;\n        float: left;\n        margin-left: px-to-rem(15);\n      }\n\n      .box-info-button {\n        position: relative;\n        float: left;\n        @include main-button;\n        text-decoration: none;\n        width: 45%;\n        min-width: 200px;\n        max-width: 280px;\n\n        &.cta {\n          @include main-button-cta;\n          width: 50%;\n          margin: 0 px-to-rem(20) px-to-rem(20) 0;\n        }\n      }\n    }\n  }\n}\n\n.box-info.single {\n  .box-info-image {\n    width: 30%;\n    min-width: 300px;\n    max-width: 400px;\n    border: 1px $green solid;\n    align-self: stretch;\n  }\n\n  .box-info-data {\n    h2 {\n      font-size: px-to-rem(35);\n    }\n\n    p {\n      font-size: px-to-rem(12);\n\n      &.box-info-desc {\n        font-size: px-to-rem(14);\n        line-height: px-to-rem(18);\n\n        b {\n          color: $green;\n          font-weight: normal;\n        }\n      }\n    }\n\n    .box-info-status-bid {\n      .box-info-status-bid-title {\n        font-size: px-to-rem(12);\n        margin-bottom: px-to-rem(5);\n      }\n\n      .box-info-status-bid-bid {\n        @include font-special();\n        font-size: px-to-rem(24);\n        color: $pink;\n      }\n    }\n  }\n}\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  position: absolute;\n  display: inline-block;\n  margin: 0 auto;\n  width: 20%;\n  text-align: center;\n  top: 70%;\n  left: 40%;\n  font-size: 120%;\n  padding-top: 6px;\n  background-color: $gray;\n  color: $white;\n  border-top: 4px solid $white;\n  border-right: 4px solid $greentint-dark;\n  border-bottom: 4px solid $greentint-dark;\n  border-left: 4px solid $white;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $green;\n    color: $pink;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $pink;\n  }\n}\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#42ff00, 0.3);\n$pink: #fa00ff;\n$gray: rgba(255, 255, 255, 0.3);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","@import 'src/style/shared.scss';\r\n\r\n.Home {\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n  padding: px-to-rem(20) $navbar-padding-mobile;\r\n  z-index: 50;\r\n\r\n  @media (min-width: $layout-large) {\r\n    padding: px-to-rem(20) $navbar-padding-desktop;\r\n  }\r\n\r\n  &-header {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    margin: px-to-rem(0) 0 0 0;\r\n    background-color: transparent;\r\n    padding: px-to-rem(20) 0;\r\n    color: $green;\r\n\r\n    .home-header-wrapper {\r\n      display: grid;\r\n      grid-template-columns: 1fr 30vw;\r\n      //grid-template-rows: 330px 330px;\r\n      grid-gap: 20px;\r\n      height: 100%;\r\n    }\r\n\r\n    .home-header-box {\r\n      border: 1px $green solid;\r\n      box-sizing: border-box;\r\n      color: $green;\r\n      background-color: $blacktint;\r\n\r\n      &.big {\r\n        grid-column: 1 / 2;\r\n        grid-row: 1 / 3;\r\n        padding: px-to-rem(20) $navbar-padding-mobile;\r\n        box-sizing: border-box;\r\n\r\n        @media (min-width: $layout-large) {\r\n          padding: px-to-rem(30) $navbar-padding-desktop;\r\n        }\r\n\r\n        h1 {\r\n          @include title;\r\n        }\r\n      }\r\n\r\n      &.small-top {\r\n        grid-column: 2 / 2;\r\n        grid-row: 1;\r\n      }\r\n\r\n      &.small-bottom {\r\n        grid-column: 2 / 2;\r\n        grid-row: 2;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#42ff00, 0.3);\n$pink: #fa00ff;\n$gray: rgba(255, 255, 255, 0.3);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  position: absolute;\n  display: inline-block;\n  margin: 0 auto;\n  width: 20%;\n  text-align: center;\n  top: 70%;\n  left: 40%;\n  font-size: 120%;\n  padding-top: 6px;\n  background-color: $gray;\n  color: $white;\n  border-top: 4px solid $white;\n  border-right: 4px solid $greentint-dark;\n  border-bottom: 4px solid $greentint-dark;\n  border-left: 4px solid $white;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $green;\n    color: $pink;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $pink;\n  }\n}\n"]}