{"version":3,"sources":["E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/Gallery.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/vars.scss","E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/pages/Gallery/E:/projects/fakeArtits/live4ever/src/style/mixins.scss"],"names":[],"mappings":"AAEA,SACE,iBAAA,CACA,UAAA,CACA,UAAA,CACA,4BAAA,CACA,UAAA,CACA,aAAA,CACA,YCkD0B,CDhD1B,0BATF,SAUI,iBCgDyB,CAAA,CD7C3B,mBACE,iBAAA,CACA,UAAA,CACA,UAAA,CACA,QAAA,CAEA,YEsGkB,CFnGlB,0BATF,mBAUI,YEkGgB,CAAA,CF9FpB,iBACE,iBAAA,CACA,UAAA,CACA,UAAW,CAHZ,+BAMG,YAAA,CACA,yDAAA,CACA,aAAA,CAAA,QAAA,CACA,oBAAqB,CATxB,6CAYK,gBAAA,CAAA,QAAA,CACA,YAAA,CACA,oBAAA,CACA,UAAA,CEnBN,8CAAA,CACA,eAAA,CFoBM,4BAA6B,CAjBlC,mDAoBO,kCCjBc,CDHrB,+CAwBO,oBAAqB,CAxB5B,mEA4BO,iBAAA,CACA,UAAW,CA7BlB,8DAiCO,iBAAA,CACA,UAAA,CACA,eAAgB,CAnCvB,qEAsCS,UAAA,CACA,UAAA,CACA,gBAAiB,CAxC1B,kEA4CS,iBAAA,CACA,MAAA,CACA,KAAA,CACA,gBAAA,CACA,6BAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CACA,cAAA,CACA,wBAAA,CAAA,gBAAiB,CArD1B,iEA0DO,aAAA,CACA,gBAAA,CACA,kBEkCY,CF9FnB,sEAgEO,gBAAA,CACA,eAA2B,CAjElC,oEE0CD,qDAAA,CACA,eAAA,CF2BQ,gBAAA,CACA,aAAA,CACA,aAAuC,CAxE9C,uEEoRD,wBAAA,CACA,yBAAA,CACA,4BAAA,CACA,wBAAA,CACA,qBAAA,CACA,aAAA,CACA,gBAAA,CF7MQ,UAAA,CACA,eEgBY,CF9FnB,8EE6RC,mBAAA,CACA,wBAAA,CACA,UD/RQ,CDAT,oFEmSC,cAAA,CACA,wBAAA,CACA,wBAAA,CACA,UDtSQ,CDAT,8EE0SC,oBAAqB,CFrUzB,qBAgHI,iBAAA,CACA,UAAA,CACA,UAAA,CACA,qBAAA,CACA,4BAAA,CACA,+BCzF0B,CD5B9B,6BAwHM,YAAA,CACA,wBAAwB,CAExB,0BA3HN,6BA4HQ,YEHc,CAAA,CFzHtB,gDAgIQ,4BAAA,CACA,WAAA,CACA,QAAA,CACA,SAAU,CAEV,0BArIR,gDAsIU,SAAU,CAAA,CAtIpB,2CA2IQ,yDAA4D,CA3IpE,yDA8IU,YAAA,CACA,+BCnHoB,CD5B9B,6EAkJY,UAAA,CACA,gBE1BU,CFzHtB,kFAuJY,cAAA,CACA,QAAS,CAxJrB,+DA4JY,kCC9HY,CD9BxB,6CAkKQ,iBAAA,CACA,UAAA,CACA,UAAW,CApKnB,gDE4OE,eAAA,CA/LA,+CAAA,CACA,kBAAA,CACA,eAAA,CA+LA,wBAAA,CACA,aAAA,CACA,gBAAA,CACA,gBAAA,CACA,eAAA,CACA,qBAAsB","file":"6.84f63219.chunk.css","sourcesContent":["@import 'src/style/shared.scss';\n\n.Gallery {\n  position: relative;\n  float: left;\n  width: 100%;\n  background-color: transparent;\n  z-index: 50;\n  color: $green;\n  padding: px-to-rem(20) $navbar-padding-mobile;\n\n  @media (min-width: $layout-large) {\n    padding: px-to-rem(20) $navbar-padding-desktop;\n  }\n\n  &-container {\n    position: relative;\n    float: left;\n    width: 100%;\n    margin: px-to-rem(0) 0 0 0;\n    // border: 1px $green solid;\n    padding: px-to-rem(20);\n    // background-color: $blacktint;\n\n    @media (min-width: $layout-large) {\n      padding: px-to-rem(30);\n    }\n  }\n\n  &-content {\n    position: relative;\n    float: left;\n    width: 100%;\n\n    .gallery-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n      gap: px-to-rem(10);\n      grid-auto-flow: dense;\n\n      .gallery-item {\n        flex: 1;\n        padding: px-to-rem(20);\n        text-decoration: none;\n        color: $white;\n        @include font-regular();\n        background-color: transparent;\n\n        &:hover {\n          background-color: $greentint;\n        }\n\n        a {\n          text-decoration: none;\n        }\n\n        .gallery-item-content {\n          position: relative;\n          width: 100%;\n        }\n\n        .image-container {\n          position: relative;\n          width: 100%;\n          overflow: hidden;\n\n          &:before {\n            content: '';\n            float: left;\n            padding-top: 100%;\n          }\n\n          img {\n            position: absolute;\n            left: 0;\n            top: 0;\n            object-fit: cover;\n            object-position: center center;\n            width: 100%;\n            height: 100%;\n            min-height: 100%;\n            min-width: 100%;\n            user-select: none;\n          }\n        }\n\n        .gallery-item-title {\n          color: $green;\n          font-size: px-to-rem(22);\n          margin-bottom: px-to-rem(20);\n        }\n\n        .gallery-item-info-title {\n          font-size: px-to-rem(18);\n          margin: 0 0 px-to-rem(20) 0;\n        }\n\n        .gallery-item-info-bid {\n          @include font-special();\n          font-size: px-to-rem(24);\n          color: $green;\n          margin: px-to-rem(10) 0 px-to-rem(10) 0;\n        }\n\n        .gallery-item-info-button {\n          @include item-button;\n          width: 100%;\n          margin-top: px-to-rem(20);\n        }\n      }\n    }\n  }\n\n  &.Home-galery {\n    position: relative;\n    float: left;\n    width: 100%;\n    box-sizing: border-box;\n    background-color: transparent;\n    background-color: $blacktint;\n\n    &.Gallery {\n      padding: px-to-rem(20);\n      border: 1px $green solid;\n\n      @media (min-width: $layout-large) {\n        padding: px-to-rem(30);\n      }\n\n      .Gallery-container {\n        background-color: transparent;\n        border: none;\n        margin: 0;\n        padding: 0;\n\n        @media (min-width: $layout-large) {\n          padding: 0;\n        }\n      }\n\n      .gallery-list {\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n\n        .gallery-item {\n          padding: px-to-rem(10);\n          background-color: $blacktint;\n\n          .gallery-item-title {\n            color: $white;\n            font-size: px-to-rem(14);\n          }\n\n          .gallery-item-info-title {\n            font-size: px-to-rem(10);\n            margin: 0;\n          }\n\n          &:hover {\n            background-color: $greentint;\n          }\n        }\n      }\n\n      .Gallery-header {\n        position: relative;\n        float: left;\n        width: 100%;\n\n        h1 {\n          @include title;\n        }\n      }\n    }\n  }\n}\n","@import 'layout.scss';\n\n$base-image-path: '../../assets/images/';\n\n// Variables\n//\n// Add global variables here, color palette, those variables shared by components all applied to global styling\n$logo-size-width: 170px;\n$logo-size-height: 88px;\n$logo-size-half-width: 85px;\n$logo-size-top: 25px;\n\n// ====================================================================\n// Breakpoints\n//\n// Window breakpoints\n// ====================================================================\n$layout-small: map-get($layout, small) + px;\n$layout-medium: map-get($layout, medium) + px;\n$layout-large: map-get($layout, large) + px;\n$layout-xlarge: map-get($layout, xlarge) + px;\n$min-width: 350px;\n\n// ====================================================================\n// Base palette\n//\n// Grayscale and brand colors for use across the site.\n// ====================================================================\n$white: #fff;\n$black: #000;\n$blacktint: rgba(0, 0, 0, 0.8);\n$green: #42ff00;\n$greentint: rgba(#42ff00, 0.1);\n$greentint-dark: rgba(#429900, 0.5);\n\n$pink: #fa00ff;\n$gray-tint: rgba(255, 255, 255, 0.3);\n$gray: rgba(255, 255, 255, 1);\n$blacktint-dark: rgba(0, 0, 0, 0.9);\n\n$tint-dark: rgba(#000000, 0.2);\n$tint-light: rgba(#ffffff, 0.8);\n\n// ====================================================================\n// General\n//\n// Global color variables, used usually in sections\n// Global variables used across the web app\n// ====================================================================\n$page-bg-color: $white;\n$rotate-screen-bg-color: $black;\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\n$generic-fonts: Helvetica, Arial, sans-serif;\n\n// ====================================================================\n// Nav bar\n// ====================================================================\n$navbar-height-mobile: px-to-rem(130);\n$navbar-height-desktop: px-to-rem(130);\n$navbar-padding-mobile: 2rem;\n$navbar-padding-desktop: 4rem;\n\n// ====================================================================\n// List of z-index element\n// ====================================================================\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\n\n$footer-height-mobile: 130px;\n$footer-height-desktop: 180px;\n","// Sass Mixins\n//\n// More information about mixins in:\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\n// Add comment to every function\n@import 'vars.scss';\n\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-light();\n///   }\n@mixin font-light() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-regular();\n///   }\n@mixin font-regular() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 400;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-bold() {\n  font-family: 'Aldrich', #{$generic-fonts};\n  font-weight: 500;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-title() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-h1() {\n  font-family: 'Orbitron', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-special() {\n  font-family: 'DigitalNumbers', #{$generic-fonts};\n  font-weight: 100;\n}\n\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\n/// @group Fonts\n/// @example scss Input\n///   .landing-section {\n///     @include font-bold();\n///   }\n@mixin font-banner() {\n  font-family: 'Mitr', #{$generic-fonts};\n  letter-spacing: 3px;\n  font-weight: 100;\n}\n\n/// Improve animation performance for containers\n/// @example scss Input\n///   .card {\n///     @include gpu();\n///   }\n@mixin gpu {\n  backface-visibility: hidden;\n  transform-style: preserve-3d;\n  perspective: 1000px;\n\n  .safari & {\n    perspective: none; // otherwise text and icons become blurry\n  }\n}\n\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\n/// @parameter {Measure unit} $width - Specify width of the box\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\n/// @example scss Input\n///   .card {\n///     @include box(3.2rem);\n///   }\n///   .card-another {\n///     @include box(3.2rem, 2rem);\n///   }\n@mixin box($width, $height: $width) {\n  width: $width;\n  height: $height;\n}\n\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\n/// @example scss Input\n///   section {\n///     height: pxToRem(200);\n///   }\n@function px-to-rem($px) {\n  @return $px * 0.1rem;\n}\n\n/// Set top and left to 0\n/// @example scss Input\n///   element {\n///     @include position-0;\n///   }\n@mixin position-0 {\n  top: 0;\n  left: 0;\n}\n\n/// Set full size of box and position\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\n/// @example scss Input\n///   element {\n///     @include position-100(absolute);\n///   }\n@mixin position-100($pos: 'relative') {\n  position: $pos;\n  @include position-0;\n  @include box(100%);\n}\n\n/// Set display flex and center children horizontally and vertically\n/// @example scss Input\n///   element {\n///     @include flex-center;\n///   }\n@mixin flex-center {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n/// Set display flex and center children vertically\n/// @example scss Input\n///   element {\n///     @include flex-center-vert;\n///   }\n@mixin flex-center-vert {\n  display: flex;\n  align-items: center;\n}\n\n/// Set display flex and center children horizontally\n/// @example scss Input\n///   element {\n///     @include flex-center-horiz;\n///   }\n@mixin flex-center-horiz {\n  display: flex;\n  justify-content: center;\n}\n\n/// Center its element (horizontally and vertically) by using transform\n/// @example scss Input\n///   element {\n///     @include transform-center;\n///   }\n@mixin transform-center {\n  top: 50%;\n  left: 50%;\n  transform: translateX(-50%) translateY(-50%);\n}\n\n/// Set vertical center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-vert;\n///   }\n@mixin transform-center-vert {\n  top: 50%;\n  transform: translateY(-50%);\n}\n\n/// Set horizontal center of its element\n/// @example scss Input\n///   element {\n///     @include transform-center-horiz;\n///   }\n@mixin transform-center-horiz {\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n/// Set z-index value in order of $element variable\n/// @example scss Input\n///   element {\n///     @include z-index(preloader);\n///   }\n@mixin z-index($id) {\n  z-index: index($elements, $id);\n}\n\n/// Reset button's look\n/// @example scss Input\n///   button {\n///     @include reset-button;\n///   }\n@mixin reset-button {\n  border: none;\n  outline: none;\n  cursor: pointer;\n  background: transparent;\n  padding: 0;\n  text-align: inherit;\n  letter-spacing: inherit;\n  font-size: inherit;\n  text-transform: inherit;\n  color: inherit;\n}\n\n@mixin title {\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\n  @include font-title;\n  text-transform: uppercase;\n  color: $pink;\n  font-size: px-to-rem(24);\n  line-height: px-to-rem(20);\n  text-align: left;\n  box-sizing: border-box;\n}\n\n@mixin main-button {\n  background-color: transparent;\n  padding: px-to-rem(13) px-to-rem(35);\n  font-size: px-to-rem(16);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    // background-color: $greentint-dark;\n    background-color: $green;\n    color: $black;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin main-button-cta {\n  background-color: $green;\n  padding: px-to-rem(15) px-to-rem(20) px-to-rem(13) px-to-rem(20);\n  border: 1px $green solid;\n  box-sizing: border-box;\n  font-size: px-to-rem(16);\n  color: $pink;\n\n  a {\n    color: $green;\n  }\n\n  &:hover {\n    cursor: pointer;\n    background-color: $pink;\n    color: $black;\n    border: 1px $pink solid;\n\n    a {\n      color: $black;\n    }\n  }\n\n  a.active {\n    text-decoration: none;\n  }\n}\n\n@mixin item-button {\n  text-transform: uppercase;\n  padding: px-to-rem(6) px-to-rem(3) px-to-rem(3) px-to-rem(3);\n  background-color: transparent;\n  border: 1px $green solid;\n  box-sizing: border-box;\n  color: $green;\n  font-size: px-to-rem(16);\n\n  &.active {\n    text-transform: none;\n    background-color: $green;\n    color: $black;\n  }\n\n  &.active:hover {\n    cursor: pointer;\n    border: 1px $pink solid;\n    background-color: $pink;\n    color: $black;\n  }\n\n  &.active {\n    text-decoration: none;\n  }\n}\n\n@mixin ad-button {\n  z-index: 1;\n  left: 50%;\n  transform: translateX(-50%);\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 24px;\n  padding: px-to-rem(8) px-to-rem(20) px-to-rem(6) px-to-rem(20);\n  background-color: $gray;\n  color: $white;\n  border-top: 3px solid $tint-light;\n  border-right: 3px solid $tint-dark;\n  border-bottom: 3px solid $tint-dark;\n  border-left: 3px solid $tint-light;\n  user-select: none;\n  opacity: 0.4;\n\n  &.active {\n    cursor: pointer;\n    background-color: $gray;\n    color: $black;\n    opacity: 1;\n  }\n\n  &.active:hover {\n    color: $white;\n    background-color: $black;\n  }\n}\n"]}