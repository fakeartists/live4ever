{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","data/leaderboard.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","console","log","description","bid","assetinfo","reserve","userbid","classSingle","isSingle","highestbid","data","cookiedata","getCookie","variation","ubid","getBidWithVariation","bidData","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","dangerouslySetInnerHTML","__html","full_description","status","onClick","clickFunction","copy","button_box_asset","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","_id","button_box_home","classnames","previewFunction","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","clicks","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_12__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","state","mineIsOpen","mineState","dispatch","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","leaderboard","name","time","Leaderboard","convertTime","start","moment","Date","now","duration","diff","days","hours","minutes","seconds","_this","sufix_leaderboard_when","prevProps","_this2","react_default","title_leaderboard_bid","title_leaderboard_from","title_leaderboard_when","leaderboardData","map","item","index","key","Asset","classCallCheck","possibleConstructorReturn","getPrototypeOf","animateIn","asyncToGenerator","regenerator_default","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","onClickBid","checkCookieLogin","setMineState","asset","setLoginState","onOpenPreview","setAssetPreviewState","setAssetData","webgl","getCopy","language","boxcopy","leaderoardcopy","params","match","set","assetId","getData","setState","setAssetLoaded","ref","el","title_leaderboard","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"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","file":"static/js/4.ce955d53.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\nimport { getCookie } from '../../util/cookies';\nimport { getBidWithVariation } from '../../util/bid';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {}\n\n  render() {\n    console.log('render');\n\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n\n    let highestbid = this.props.data.highestbid;\n\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n    let ubid = getBidWithVariation(cookiedata.bidData.bid, variation);\n    highestbid = ubid > highestbid ? ubid : highestbid;\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{ubid + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className=\"box-info-image\" onClick={this.props.previewFunction}>\n            <img src={this.props.data.image} alt={this.props.data.title} />\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            <div className=\"box-info-data-image\" onClick={this.props.previewFunction}>\n              <img src={this.props.data.image} alt={this.props.data.title} />\n            </div>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">{highestbid + ' ' + this.props.copy.piramid_ico}</p>\n                  <p className=\"box-info-status-info\">{this.props.data.clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func,\n  previewFunction: PropTypes.func,\n  mineIsOpen: PropTypes.object\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null,\n  previewFunction: null\n};\n\nconst mapStateToProps = state => ({\n  mineIsOpen: state.mineState.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","export default [\n  {\n    _id: 'io_0faTg01',\n    bid: 1500,\n    image: 'https://i.pravatar.cc/80??u=324',\n    name: 'Elon Tusk',\n    time: 'July 15, 2021 02:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 1100,\n    image: 'https://i.pravatar.cc/80?u=aasd4d',\n    name: 'dhjnIK55',\n    time: 'July 14, 2021 02:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 800,\n    image: 'https://i.pravatar.cc/80??u=324',\n    name: 'Elon Tusk',\n    time: 'July 14, 2021 01:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 400,\n    image: 'https://i.pravatar.cc/80?u=aasd4d',\n    name: 'dhjnIK55',\n    time: 'July 13, 2021 01:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 300,\n    image: 'https://i.pravatar.cc/80?u=asdpop',\n    name: 'Juncalika',\n    time: 'July 13, 2021 00:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 100,\n    image: 'https://i.pravatar.cc/80?u=asdxczvx',\n    name: 'Mialoka',\n    time: 'July 12, 2021 00:13:00',\n    status: ''\n  }\n];\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\n\nimport './Leaderboard.scss';\n\n//temp\nimport leaderboardData from '../../data/leaderboard';\n\nclass Leaderboard extends React.PureComponent {\n  async componentDidMount() {}\n  componentDidUpdate(prevProps) {}\n\n  convertTime = time => {\n    const start = moment(new Date(time));\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    return (\n      duration.days() +\n      'd ' +\n      duration.hours() +\n      'h ' +\n      duration.minutes() +\n      'm ' +\n      duration.seconds() +\n      's ' +\n      this.props.copy.sufix_leaderboard_when\n    );\n  };\n\n  render() {\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{this.props.copy.title_leaderboard_bid}</th>\n              <th>{this.props.copy.title_leaderboard_from}</th>\n              <th>{this.props.copy.title_leaderboard_when}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {leaderboardData.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{item.bid + ' ' + this.props.copy.piramid_ico}</td>\n                  <td>\n                    <img src={item.image} alt=\"bid user avatar\" />\n                    <p>{item.name}</p>\n                  </td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  copy: PropTypes.object\n});\n\nLeaderboard.defaultProps = {\n  copy: {}\n};\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Leaderboard);\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport checkProps from '@jam3/react-check-extra-props';\r\nimport Transition from '../PagesTransitionWrapper';\r\nimport animate, { Expo } from '../../util/gsap-animate';\r\nimport { setAssetLoaded } from '../../redux/modules/asset';\r\nimport { setMineState } from '../../redux/modules/mine';\r\nimport { setLoginState } from '../../redux/modules/login';\r\nimport { setAssetPreviewState } from '../../redux/modules/asset-preview';\r\nimport { setAssetData } from '../../redux/modules/asset-preview';\r\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\r\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\r\nimport { getCopy } from '../../data/get-site-data';\r\nimport { getData } from '../../data/get-site-data';\r\nimport { checkCookieLogin } from '../../util/cookies';\r\n\r\nimport './Asset.scss';\r\n\r\nclass Asset extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { asset: {} };\r\n    this.copy = getCopy(this.props.language, 'asset');\r\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\r\n    this.leaderoardcopy = getCopy(this.props.language, 'leaderboard');\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { params } = this.props.match;\r\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\r\n\r\n    if (!this.props.loaded) {\r\n      if (params.assetId !== undefined) {\r\n        const asset = await getData(params.assetId);\r\n        this.setState({\r\n          asset: asset\r\n        });\r\n      }\r\n      this.props.setAssetLoaded(true);\r\n    }\r\n  }\r\n\r\n  onAppear = () => {\r\n    this.animateIn();\r\n  };\r\n\r\n  onEnter = async prevSectionExitDuration => {\r\n    this.animateIn();\r\n  };\r\n\r\n  onLeave = () => {\r\n    this.animateOut();\r\n  };\r\n\r\n  animateIn = () => {\r\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\r\n  };\r\n\r\n  animateOut = () => {\r\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\r\n  };\r\n\r\n  onClickBid = () => {\r\n    if (checkCookieLogin()) {\r\n      this.props.setMineState(this.state.asset);\r\n    } else {\r\n      this.props.setLoginState(true);\r\n    }\r\n  };\r\n\r\n  onOpenPreview = () => {\r\n    console.log('open');\r\n    this.props.setAssetPreviewState(true);\r\n    this.props.setAssetData(this.state.asset.webgl);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\r\n        <section className=\"Asset-container\">\r\n          <BoxInfo\r\n            isSingle={true}\r\n            clickFunction={this.onClickBid}\r\n            previewFunction={this.onOpenPreview}\r\n            copy={this.boxcopy}\r\n            data={this.state.asset}\r\n          />\r\n        </section>\r\n        <section className=\"Asset-container leaderboard\">\r\n          <h1>{this.copy.title_leaderboard}</h1>\r\n          <Leaderboard copy={this.leaderoardcopy} />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAsset.propTypes = checkProps({\r\n  language: PropTypes.string,\r\n  className: PropTypes.string,\r\n  transitionState: PropTypes.string.isRequired,\r\n  previousRoute: PropTypes.string,\r\n  loaded: PropTypes.bool,\r\n  setAssetLoaded: PropTypes.func,\r\n  setMineState: PropTypes.func,\r\n  setLoginState: PropTypes.func,\r\n  setAssetPreviewState: PropTypes.func,\r\n  setAssetData: PropTypes.func\r\n});\r\n\r\nAsset.defaultProps = {\r\n  language: 'en',\r\n  loaded: false\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    previousRoute: state.previousRoute,\r\n    loaded: state.assetLoaded.loaded\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\r\n    setMineState: val => dispatch(setMineState(val)),\r\n    setLoginState: val => dispatch(setLoginState(val)),\r\n    setAssetPreviewState: val => dispatch(setAssetPreviewState(val)),\r\n    setAssetData: val => dispatch(setAssetData(val))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Transition(Asset));\r\n"],"sourceRoot":""}