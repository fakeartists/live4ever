{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","_this","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","updateHighest","highest","setState","state","description","bid","assetinfo","reserve","userbid","imageOver","cookiedata","getCookie","variation","classSingle","isSingle","highestbid","haswebgl","data","webgl","clickimage","previewFunction","ubid","getBidWithVariation","bidData","clicks","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","dangerouslySetInnerHTML","__html","full_description","status","onClick","clickFunction","copy","button_box_asset","image_click","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_9__","link","_id","button_box_home","classnames","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_10__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","mineIsOpen","mineState","dispatch","withRef","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","Leaderboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","getRank","id","login","leaderboard","findIndex","x","getHighest","updateLeaderboard","asyncToGenerator","regenerator_default","count","idx","getUsers","users","sent","t0","t1","done","value","hasOwnProperty","push","maxUsers","abrupt","sort","b","convertTime","time","start","moment","Date","now","duration","diff","Math","floor","asDays","hours","minutes","seconds","sufix_leaderboard_when","avatarPath","settings","prevProps","_this2","react_default","title_leaderboard_bid","title_leaderboard_from","title_leaderboard_when","map","item","index","key","name","Asset","animateIn","prevSectionExitDuration","animateOut","animate","to","autoAlpha","ease","Expo","easeOut","onClickBid","checkCookieLogin","setMineState","asset","setLoginState","onOpenPreview","setAssetPreviewState","setAssetData","getWrappedInstance","boxinfo","getCopy","language","boxcopy","leaderoardcopy","params","match","set","assetId","getData","getLeaderboard","updateFunction","leadeboard","setAssetLoaded","ref","el","title_leaderboard","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"yKAMMA,EACM,WADNA,EAEK,UAFLA,EAGK,UAsDIC,IAlDgB,SAAAC,GAC7B,IAAIC,EACEC,EAAqB,eAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,EAAAC,EAAAC,KAAG,SAAAC,EAAOC,GAAP,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,UAAA,OAAAT,EAAAC,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAsBR,EAAtBG,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAgCQ,IAAMV,EAAtCE,EAAAM,OAAA,QAAAC,IAAAP,EAAA,GAAAA,EAAA,GAAiDQ,KAGzEZ,EAHwB,CAAAO,EAAAE,KAAA,gBAIpBN,EAAqBU,YAA0Bb,IAAkB,EACvEC,EAAQE,GALkBI,EAAAE,KAAA,EAMpBK,IAAKX,GANe,OAO1BZ,EAAUwB,MAAMC,QAAU,GAPAT,EAAAE,KAAA,iBAS1BlB,EAAUwB,MAAMC,QAAU,GAC1Bd,IAV0B,yBAAAK,EAAAU,SAAAlB,EAAAmB,SAAH,gBAAAC,GAAA,OAAA1B,EAAA2B,MAAAF,KAAAb,YAAA,GAmBrBgB,EAAoB/B,EAAMgC,UAAUD,kBAC1C/B,EAAMgC,UAAUD,kBAAoB,WAClCA,GAAqBA,EAAkBE,KAAKL,OAC5C3B,EAAYiC,sBAAYN,OACdH,MAAMC,QAAU,OAE1BS,OAAOC,SAAS,EAAG,GAGjBR,KAAKS,MAAMC,kBAAoBxC,GAC/B8B,KAAKS,MAAMC,kBAAoBxC,GAE/BI,EAAsB0B,KAAKS,MAAM3B,cAAekB,KAAKjB,QAASiB,KAAKhB,WAIvE,IAAM2B,EAAqBvC,EAAMgC,UAAUO,mBAU3C,OATAvC,EAAMgC,UAAUO,mBAAqB,WACnCA,GAAsBA,EAAmBT,MAAMF,KAAMb,WACjDa,KAAKS,MAAMC,kBAAoBxC,EACjCI,EAAsB0B,KAAKS,MAAM3B,cAAekB,KAAKjB,QAASiB,KAAKhB,UAC1DgB,KAAKS,MAAMC,kBAAoBxC,GA1Bd,YAAoBiB,UAAAK,OAAA,QAAAC,IAAAN,UAAA,GAAAA,UAAA,GAATO,OA2BrCkB,CAAsBZ,KAAKa,UAIxBzC,6JChDH0C,sBACJ,SAAAA,EAAYL,GAAO,IAAAM,EAAA,OAAAvC,OAAAwC,EAAA,EAAAxC,CAAAwB,KAAAc,IACjBC,EAAAvC,OAAAyC,EAAA,EAAAzC,CAAAwB,KAAAxB,OAAA0C,EAAA,EAAA1C,CAAAsC,GAAAT,KAAAL,KAAMS,KAIRU,cAAgB,SAAAC,GACdL,EAAKM,SAAS,CACZD,QAASA,KALXL,EAAKO,MAAQ,CAAEF,QAAS,GAFPL,wEAYjB,IAIIQ,EACAC,EACAC,EACAC,EACAC,EACAC,EATEC,EAAaC,cACbC,EAAYF,GAAcA,EAAWE,UAEvCC,EAAchC,KAAKS,MAAMwB,SAAW,SAAW,GAQ/CC,EAAalC,KAAKsB,MAAMF,QACxBe,EAAWnC,KAAKS,MAAM2B,KAAKC,MAAQ,WAAa,GAChDC,EAAatC,KAAKS,MAAM8B,gBAExBC,EAAOC,YAAoBZ,EAAWa,QAAQlB,IAAKO,GAEnDY,EADJT,EAAaM,EAAON,EAAaM,EAAON,EA8ExC,OA5EAA,EAAaO,YAAoBP,EAAYH,GAEzC/B,KAAKS,MAAMwB,UACbV,EACEqB,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,gBAAgBC,wBAAyB,CAAEC,OAAQhD,KAAKS,MAAM2B,KAAKa,oBAGnD,SAA3BjD,KAAKS,MAAM2B,KAAKc,SAClB1B,EACEoB,EAAAjE,EAAAkE,cAAA,UAAQC,UAAU,sBAAsBK,QAASnD,KAAKS,MAAM2C,eACzDpD,KAAKS,MAAM4C,KAAKC,mBAKN,KAAbnB,IACFP,EACEgB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,0BACbF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,+BACfF,EAAAjE,EAAAkE,cAAA,SAAI7C,KAAKS,MAAM4C,KAAKE,eAK1B9B,EACEmB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,kBACbF,EAAAjE,EAAAkE,cAAA,UACED,EAAAjE,EAAAkE,cAAA,UACED,EAAAjE,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKG,YAArB,KACAZ,EAAAjE,EAAAkE,cAAA,SAAI7C,KAAKS,MAAM2B,KAAKqB,aAEtBb,EAAAjE,EAAAkE,cAAA,UACED,EAAAjE,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKK,eAArB,KACAd,EAAAjE,EAAAkE,cAAA,SAAI7C,KAAKS,MAAM2B,KAAKuB,mBAEtBf,EAAAjE,EAAAkE,cAAA,UACED,EAAAjE,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKO,YAArB,KACAhB,EAAAjE,EAAAkE,cAAA,SAAI7C,KAAKS,MAAM2B,KAAKyB,WAEtBjB,EAAAjE,EAAAkE,cAAA,UACED,EAAAjE,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKS,kBACrBlB,EAAAjE,EAAAkE,cAAA,SAAI7C,KAAKS,MAAM2B,KAAK2B,eAMxB/D,KAAKS,MAAM2B,KAAKV,UAClBA,EACEkB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW,gBAAkBd,GAChCY,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,6BAA6B9C,KAAKS,MAAM4C,KAAKW,eAC1DpB,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,2BAA2B9C,KAAKS,MAAM2B,KAAKV,QAAU,IAAM1B,KAAKS,MAAM4C,KAAKY,eAK/D,SAA3BjE,KAAKS,MAAM2B,KAAKc,SAClBvB,EACEiB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,uBACbF,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,6BAA6B9C,KAAKS,MAAM4C,KAAKa,gBAC1DtB,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,2BAA2BN,EAAO,IAAMxC,KAAKS,MAAM4C,KAAKY,iBAK3E1C,EAAcqB,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,iBAAiB9C,KAAKS,MAAM2B,KAAK+B,mBAC5DhC,EAAW,GACXG,EAAa,KAEbd,EACEoB,EAAAjE,EAAAkE,cAACuB,EAAA,EAAD,CAAUtB,UAAU,sBAAsBuB,KAAM,WAAarE,KAAKS,MAAM2B,KAAKkC,KAC1EtE,KAAKS,MAAM4C,KAAKkB,kBAMrB3B,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW0B,IAAU,WAAaxC,IACrCY,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,gBACbF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW,iBAAmBX,EAAUgB,QAASb,GACpDM,EAAAjE,EAAAkE,cAAA,OAAK4B,IAAKzE,KAAKS,MAAM2B,KAAKsC,MAAOC,IAAK3E,KAAKS,MAAM2B,KAAKwC,QACrDhD,GAEHgB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,iBACbF,EAAAjE,EAAAkE,cAAA,MAAIC,UAAU,uBAAuB9C,KAAKS,MAAM2B,KAAKwC,OACrDhC,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,yBACV9C,KAAKS,MAAM4C,KAAKwB,cACf,IACA7E,KAAKS,MAAM2B,KAAK0C,QAChB,IACA9E,KAAKS,MAAM4C,KAAK0B,kBAChB,IACA/E,KAAKS,MAAM2B,KAAK4C,MAEpBpC,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW,sBAAwBX,EAAUgB,QAASb,GACzDM,EAAAjE,EAAAkE,cAAA,OAAK4B,IAAKzE,KAAKS,MAAM2B,KAAKsC,MAAOC,IAAK3E,KAAKS,MAAM2B,KAAKwC,QACrDhD,GAEFL,EACDqB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,mBACbF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,uBACbF,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW,gBAAkBd,GAChCY,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,6BAA6B9C,KAAKS,MAAM4C,KAAK4B,WAC1DrC,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,2BAA2BZ,EAAa,IAAMlC,KAAKS,MAAM4C,KAAKY,aAC3ErB,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,wBAAwBH,EAAS,IAAM3C,KAAKS,MAAM4C,KAAK6B,gBAEtEtC,EAAAjE,EAAAkE,cAAA,OAAKC,UAAW,gBAAkBd,GAChCY,EAAAjE,EAAAkE,cAAA,KAAGC,UAAU,6BAA6B9C,KAAKS,MAAM4C,KAAK8B,YAC1DvC,EAAAjE,EAAAkE,cAACuC,EAAA,EAAD,CAAS/B,KAAMrD,KAAKS,MAAM4C,KAAMgC,WAAW,EAAOC,QAAStF,KAAKS,MAAM2B,KAAKmD,QAE5E7D,GAEHkB,EAAAjE,EAAAkE,cAAA,OAAKC,UAAU,0BACZtB,EACAG,MAKRF,UAtJa+D,IAAMC,gBAqK5B3E,EAAQ4E,aAAe,CACrBrC,KAAM,GACNjB,KAAM,GACNH,UAAU,EACVmB,cAAe,KACfb,gBAAiB,MAWJoD,gBARS,SAAArE,GAAK,MAAK,CAChCsE,WAAYtE,EAAMuE,UAAUzD,OAGH,SAAA0D,GACzB,MAAO,IAMP,KACA,CAAEC,SAAS,GAJEJ,CAKb7E,6PC9KFkF,EAAgBC,SArBI,cAGL,WAAwC,IAAvB3E,EAAuBnC,UAAAK,OAAA,QAAAC,IAAAN,UAAA,IAAAA,UAAA,GAAR+G,EAAQ/G,UAAAK,OAAA,EAAAL,UAAA,QAAAM,EACrD,OAAQyG,EAAOC,MACb,KAAKC,IAAKC,aACR,OAAOH,EAAOI,OAChB,QACE,OAAOhF,2FCEPiF,sBACJ,SAAAA,EAAY9F,GAAO,IAAAM,EAAA,OAAAvC,OAAAgI,EAAA,EAAAhI,CAAAwB,KAAAuG,IACjBxF,EAAAvC,OAAAiI,EAAA,EAAAjI,CAAAwB,KAAAxB,OAAAkI,EAAA,EAAAlI,CAAA+H,GAAAlG,KAAAL,KAAMS,KAmBRkG,QAAU,SAAAnF,GACR,IACMoF,EADa9E,cACG+E,MAAMD,GAE5B,OADc7F,EAAKO,MAAMwF,YAAYC,UAAU,SAAAC,GAAC,OAAIA,EAAE1C,MAAQsC,IAC/C,GAxBE7F,EA2BnBkG,WAAa,WAEX,OADgBlG,EAAKO,MAAMwF,YAAYtH,OAAS,EAAIuB,EAAKO,MAAMwF,YAAY,GAAGtF,IAAM,GA5BnET,EAgCnBmG,kBAhCmB1I,OAAA2I,EAAA,EAAA3I,CAAA4I,EAAAzI,EAAAC,KAgCC,SAAAC,IAAA,IAAAiI,EAAAO,EAAAC,EAAA,OAAAF,EAAAzI,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACCgI,cADD,OAClBxG,EAAKyG,MADanI,EAAAoI,KAEZX,EAAc,GAEhBO,EAAQ,EAJMhI,EAAAqI,GAAAN,EAAAzI,EAAAyH,KAKFrF,EAAKyG,OALH,WAAAnI,EAAAsI,GAAAtI,EAAAqI,MAAAE,KAAA,CAAAvI,EAAAE,KAAA,YAKT+H,EALSjI,EAAAsI,GAAAE,MAMZ9G,EAAKyG,MAAMM,eAAeR,IAC5BR,EAAYiB,KAAKhH,EAAKyG,MAAMF,MAE1BD,GAAStG,EAAKiH,UATF,CAAA3I,EAAAE,KAAA,gBAAAF,EAAA4I,OAAA,oBAUhBZ,IAVgBhI,EAAAE,KAAA,gBAalBuH,EAAYoB,KAAK,SAACvJ,EAAGwJ,GACnB,OAAOxJ,EAAE6C,IAAM2G,EAAE3G,KAAO,EAAI,IAG9BT,EAAKM,SAAS,CACZyF,YAAaA,IAlBG,yBAAAzH,EAAAU,SAAAlB,EAAAmB,SAhCDe,EAsDnBqH,YAAc,SAAAC,GACZ,IAAMC,EAAQC,IAAO,IAAIC,KAAKH,IACxBI,EAAMF,MACNG,EAAWH,IAAOG,SAASD,EAAIE,KAAKL,IAC1C,OACEM,KAAKC,MAAMH,EAASI,UACpB,KACAJ,EAASK,QACT,KACAL,EAASM,UACT,KACAN,EAASO,UACT,KACAlI,EAAKN,MAAM4C,KAAK6F,wBAjElBnI,EAAKoI,WAAaC,IAASD,WAC3BpI,EAAKiH,SAAW,GAChBjH,EAAKO,MAAQ,CAAEwF,YAAa,IAJX/F,iUAWAsI,2OAITrJ,KAAKkH,oDAENlH,KAAKsB,MAAMwF,gJAsDX,IAAAwC,EAAAtJ,KACD6B,EAAaC,cACbC,EAAYF,GAAcA,EAAWE,UAE3C,OACEwH,EAAA5K,EAAAkE,cAAA,OAAKC,UAAW0B,IAAU,wBACxB+E,EAAA5K,EAAAkE,cAAA,aACE0G,EAAA5K,EAAAkE,cAAA,aACE0G,EAAA5K,EAAAkE,cAAA,UACE0G,EAAA5K,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKmG,uBACrBD,EAAA5K,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKoG,wBACrBF,EAAA5K,EAAAkE,cAAA,UAAK7C,KAAKS,MAAM4C,KAAKqG,0BAGzBH,EAAA5K,EAAAkE,cAAA,aACG7C,KAAKsB,MAAMwF,YAAY6C,IAAI,SAACC,EAAMC,GACjC,OACEN,EAAA5K,EAAAkE,cAAA,MAAIiH,IAAKD,EAAO/G,UAAU,oBACxByG,EAAA5K,EAAAkE,cAAA,UAAKJ,YAAoBmH,EAAKpI,IAAKO,GAAa,IAAMuH,EAAK7I,MAAM4C,KAAKY,aACtEsF,EAAA5K,EAAAkE,cAAA,UACE0G,EAAA5K,EAAAkE,cAAA,OAAK4B,IAAKmF,EAAKlF,OAAS4E,EAAKH,WAAaS,EAAKtF,IAAKK,IAAI,oBACxD4E,EAAA5K,EAAAkE,cAAA,SAAI+G,EAAKG,OAEXR,EAAA5K,EAAAkE,cAAA,UAAKyG,EAAKlB,YAAYwB,EAAKvB,oBA/FnB7C,IAAMC,gBA8GhCc,EAAYb,aAAe,CACzBrC,KAAM,IAGR,IAKesC,cALS,SAAArE,GAAK,MAAK,IACP,SAAAwE,GACzB,MAAO,IAMP,KACA,CAAEC,SAAS,GAJEJ,CAKbY,GCtHIyD,sBACJ,SAAAA,EAAYvJ,GAAO,IAAAM,EAAA,OAAAvC,OAAAgI,EAAA,EAAAhI,CAAAwB,KAAAgK,IACjBjJ,EAAAvC,OAAAiI,EAAA,EAAAjI,CAAAwB,KAAAxB,OAAAkI,EAAA,EAAAlI,CAAAwL,GAAA3J,KAAAL,KAAMS,KA4BRzB,SAAW,WACT+B,EAAKkJ,aA9BYlJ,EAiCnBhC,QAjCmB,eAAAR,EAAAC,OAAA2I,EAAA,EAAA3I,CAAA4I,EAAAzI,EAAAC,KAiCT,SAAAC,EAAMqL,GAAN,OAAA9C,EAAAzI,EAAAS,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACRwB,EAAKkJ,YADG,wBAAA5K,EAAAU,SAAAlB,EAAAmB,SAjCS,gBAAAC,GAAA,OAAA1B,EAAA2B,MAAAF,KAAAb,YAAA,GAAA4B,EAqCnBF,QAAU,WACRE,EAAKoJ,cAtCYpJ,EAyCnBkJ,UAAY,WACVG,IAAQC,GAAGtJ,EAAK1C,UAAW,GAAK,CAAE2I,EAAG,KAAMsD,UAAW,EAAGC,KAAMC,IAAKC,WA1CnD1J,EA6CnBoJ,WAAa,WACXC,IAAQC,GAAGtJ,EAAK1C,UAAW,GAAK,CAAE2I,EAAG,KAAMsD,UAAW,EAAGC,KAAMC,IAAKC,WA9CnD1J,EAiDnB2J,WAAa,WACPC,cACF5J,EAAKN,MAAMmK,aAAa7J,EAAKO,MAAMuJ,OAEnC9J,EAAKN,MAAMqK,eAAc,IArDV/J,EAyDnBgK,cAAgB,WACVhK,EAAKO,MAAMuJ,MAAMxI,QACnBtB,EAAKN,MAAMuK,sBAAqB,GAChCjK,EAAKN,MAAMwK,aAAalK,EAAKO,MAAMuJ,MAAMxI,SA5D1BtB,EAgEnBmG,kBAAoB,WAClBnG,EAAK+F,YAAYoE,qBAAqBhE,oBACtCnG,EAAKoK,QAAQD,qBAAqB/J,cAAcJ,EAAK+F,YAAYoE,qBAAqBjE,eAhEtFlG,EAAKO,MAAQ,CAAEuJ,MAAO,IACtB9J,EAAKsC,KAAO+H,YAAQrK,EAAKN,MAAM4K,SAAU,SACzCtK,EAAKuK,QAAUF,YAAQrK,EAAKN,MAAM4K,SAAU,WAC5CtK,EAAKwK,eAAiBH,YAAQrK,EAAKN,MAAM4K,SAAU,eALlCtK,sMASTyK,EAAWxL,KAAKS,MAAMgL,MAAtBD,OACRpB,IAAQsB,IAAI1L,KAAK3B,UAAW,CAAE2I,EAAG,OAAQsD,UAAW,IAE/CtK,KAAKS,MAAM6F,gCACS7G,IAAnB+L,EAAOG,yCACWC,YAAQJ,EAAOG,uBAA7Bd,kBACA7K,KAAK8G,YAAYoE,qBAAqBW,gBAAe,UAC3DhB,EAAMiB,eAAiB9L,KAAKkH,kBAC5B2D,EAAMkB,WAAa/L,KAAK8G,YAExB9G,KAAKqB,SAAS,CACZwJ,MAAOA,IAGT7K,KAAKkH,4BAEPlH,KAAKS,MAAMuL,gBAAe,uIA4CrB,IAAA1C,EAAAtJ,KACP,OACEuJ,EAAA5K,EAAAkE,cAAA,OAAKC,UAAW0B,IAAW,QAASxE,KAAKS,MAAMqC,WAAYmJ,IAAK,SAAAC,GAAE,OAAK5C,EAAKjL,UAAY6N,IACtF3C,EAAA5K,EAAAkE,cAAA,WAASC,UAAU,mBACjByG,EAAA5K,EAAAkE,cAAC/B,EAAA,EAAD,CACEmB,UAAU,EACVmB,cAAepD,KAAK0K,WACpBnI,gBAAiBvC,KAAK+K,cACtB1H,KAAMrD,KAAKsL,QACXlJ,KAAMpC,KAAKsB,MAAMuJ,MACjBoB,IAAK,SAAAC,GAAE,OAAK5C,EAAK6B,QAAUe,MAG/B3C,EAAA5K,EAAAkE,cAAA,WAASC,UAAU,+BACjByG,EAAA5K,EAAAkE,cAAA,UAAK7C,KAAKqD,KAAK8I,mBACf5C,EAAA5K,EAAAkE,cAACuJ,EAAD,CAAa/I,KAAMrD,KAAKuL,eAAgBU,IAAK,SAAAC,GAAE,OAAK5C,EAAKxC,YAAcoF,cArF7D1G,IAAMC,gBAyG1BuE,EAAMtE,aAAe,CACnB2F,SAAU,KACV/E,QAAQ,GAoBKX,sBAjBS,SAACrE,EAAO+K,GAC9B,MAAO,CACLvN,cAAewC,EAAMxC,cACrBwH,OAAQhF,EAAMgL,YAAYhG,SAIH,SAAAR,GACzB,MAAO,CACLkG,eAAgB,SAAAO,GAAG,OAAIzG,GF1HIQ,EE0HoBiG,EFzH1C,CACLpG,KAAMC,IAAKC,aACXC,YAHG,IAAwBA,GE2H3BsE,aAAc,SAAA2B,GAAG,OAAIzG,EAAS8E,YAAa2B,KAC3CzB,cAAe,SAAAyB,GAAG,OAAIzG,EAASgF,YAAcyB,KAC7CvB,qBAAsB,SAAAuB,GAAG,OAAIzG,EAASkF,YAAqBuB,KAC3DtB,aAAc,SAAAsB,GAAG,OAAIzG,EAASmF,YAAasB,OAIhC5G,CAGb6G,YAAWxC","file":"static/js/4.36a8fe0e.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\nimport { getCookie } from '../../util/cookies';\nimport { getBidWithVariation } from '../../util/bid';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { highest: 0 };\n  }\n\n  updateHighest = highest => {\n    this.setState({\n      highest: highest\n    });\n  };\n\n  render() {\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n    let imageOver;\n\n    let highestbid = this.state.highest;\n    let haswebgl = this.props.data.webgl ? ' preview' : '';\n    let clickimage = this.props.previewFunction;\n\n    let ubid = getBidWithVariation(cookiedata.bidData.bid, variation);\n    highestbid = ubid > highestbid ? ubid : highestbid;\n    let clicks = highestbid;\n    highestbid = getBidWithVariation(highestbid, variation);\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      if (haswebgl !== '') {\n        imageOver = (\n          <div className=\"box-info-image-overlay\">\n            <div className=\"box-info-image-overlay-ico\" />\n            <p>{this.props.copy.image_click}</p>\n          </div>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{ubid + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n      haswebgl = '';\n      clickimage = null;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className={'box-info-image' + haswebgl} onClick={clickimage}>\n            <img src={this.props.data.image} alt={this.props.data.title} />\n            {imageOver}\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            <div className={'box-info-data-image' + haswebgl} onClick={clickimage}>\n              <img src={this.props.data.image} alt={this.props.data.title} />\n              {imageOver}\n            </div>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">{highestbid + ' ' + this.props.copy.piramid_ico}</p>\n                  <p className=\"box-info-status-info\">{clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func,\n  previewFunction: PropTypes.func,\n  mineIsOpen: PropTypes.object\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null,\n  previewFunction: null\n};\n\nconst mapStateToProps = state => ({\n  mineIsOpen: state.mineState.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport checkProps from '@jam3/react-check-extra-props';\nimport settings from '../../data/settings';\nimport { getUsers } from '../../data/get-site-data';\nimport { getBidWithVariation } from '../../util/bid';\nimport { getCookie } from '../../util/cookies';\n\nimport './Leaderboard.scss';\n\nclass Leaderboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.avatarPath = settings.avatarPath;\n    this.maxUsers = 25;\n    this.state = { leaderboard: [] };\n  }\n\n  async componentDidMount() {\n    // await this.updateLeaderboard();\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  async getLeaderboard(update = false) {\n    if (update) {\n      await this.updateLeaderboard();\n    }\n    return this.state.leaderboard;\n  }\n\n  getRank = bid => {\n    const cookiedata = getCookie();\n    const id = cookiedata.login.id;\n    const index = this.state.leaderboard.findIndex(x => x._id === id);\n    return index + 1;\n  };\n\n  getHighest = () => {\n    const highest = this.state.leaderboard.length > 0 ? this.state.leaderboard[0].bid : 0;\n    return highest;\n  };\n\n  updateLeaderboard = async () => {\n    this.users = await getUsers();\n    const leaderboard = [];\n\n    let count = 0;\n    for (var idx in this.users) {\n      if (this.users.hasOwnProperty(idx)) {\n        leaderboard.push(this.users[idx]);\n      }\n      if (count >= this.maxUsers) break;\n      count++;\n    }\n\n    leaderboard.sort((a, b) => {\n      return a.bid > b.bid ? -1 : 1;\n    });\n\n    this.setState({\n      leaderboard: leaderboard\n    });\n  };\n\n  convertTime = time => {\n    const start = moment(new Date(time));\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    return (\n      Math.floor(duration.asDays()) +\n      'd ' +\n      duration.hours() +\n      'h ' +\n      duration.minutes() +\n      'm ' +\n      duration.seconds() +\n      's ' +\n      this.props.copy.sufix_leaderboard_when\n    );\n  };\n\n  render() {\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{this.props.copy.title_leaderboard_bid}</th>\n              <th>{this.props.copy.title_leaderboard_from}</th>\n              <th>{this.props.copy.title_leaderboard_when}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.leaderboard.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{getBidWithVariation(item.bid, variation) + ' ' + this.props.copy.piramid_ico}</td>\n                  <td>\n                    <img src={item.image || this.avatarPath + item._id} alt=\"bid user avatar\" />\n                    <p>{item.name}</p>\n                  </td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  copy: PropTypes.object\n});\n\nLeaderboard.defaultProps = {\n  copy: {}\n};\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(Leaderboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { setAssetLoaded } from '../../redux/modules/asset';\nimport { setMineState } from '../../redux/modules/mine';\nimport { setLoginState } from '../../redux/modules/login';\nimport { setAssetPreviewState } from '../../redux/modules/asset-preview';\nimport { setAssetData } from '../../redux/modules/asset-preview';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\nimport { getCopy, getData } from '../../data/get-site-data';\nimport { checkCookieLogin } from '../../util/cookies';\n\nimport './Asset.scss';\n\nclass Asset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { asset: {} };\n    this.copy = getCopy(this.props.language, 'asset');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n    this.leaderoardcopy = getCopy(this.props.language, 'leaderboard');\n  }\n\n  async componentDidMount() {\n    const { params } = this.props.match;\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      if (params.assetId !== undefined) {\n        const asset = await getData(params.assetId);\n        await this.leaderboard.getWrappedInstance().getLeaderboard(true);\n        asset.updateFunction = this.updateLeaderboard;\n        asset.leadeboard = this.leaderboard;\n\n        this.setState({\n          asset: asset\n        });\n\n        this.updateLeaderboard();\n      }\n      this.props.setAssetLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  onClickBid = () => {\n    if (checkCookieLogin()) {\n      this.props.setMineState(this.state.asset);\n    } else {\n      this.props.setLoginState(true);\n    }\n  };\n\n  onOpenPreview = () => {\n    if (this.state.asset.webgl) {\n      this.props.setAssetPreviewState(true);\n      this.props.setAssetData(this.state.asset.webgl);\n    }\n  };\n\n  updateLeaderboard = () => {\n    this.leaderboard.getWrappedInstance().updateLeaderboard();\n    this.boxinfo.getWrappedInstance().updateHighest(this.leaderboard.getWrappedInstance().getHighest());\n  };\n\n  render() {\n    return (\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Asset-container\">\n          <BoxInfo\n            isSingle={true}\n            clickFunction={this.onClickBid}\n            previewFunction={this.onOpenPreview}\n            copy={this.boxcopy}\n            data={this.state.asset}\n            ref={el => (this.boxinfo = el)}\n          />\n        </section>\n        <section className=\"Asset-container leaderboard\">\n          <h1>{this.copy.title_leaderboard}</h1>\n          <Leaderboard copy={this.leaderoardcopy} ref={el => (this.leaderboard = el)} />\n        </section>\n      </div>\n    );\n  }\n}\n\nAsset.propTypes = checkProps({\n  language: PropTypes.string,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setAssetLoaded: PropTypes.func,\n  setMineState: PropTypes.func,\n  setLoginState: PropTypes.func,\n  setAssetPreviewState: PropTypes.func,\n  setAssetData: PropTypes.func\n});\n\nAsset.defaultProps = {\n  language: 'en',\n  loaded: false\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.assetLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\n    setMineState: val => dispatch(setMineState(val)),\n    setLoginState: val => dispatch(setLoginState(val)),\n    setAssetPreviewState: val => dispatch(setAssetPreviewState(val)),\n    setAssetData: val => dispatch(setAssetData(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Asset));\n"],"sourceRoot":""}