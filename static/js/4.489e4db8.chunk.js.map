{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","data/leaderboard.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","prevProps","description","bid","assetinfo","reserve","userbid","classSingle","isSingle","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","dangerouslySetInnerHTML","__html","data","full_description","status","onClick","clickFunction","copy","button_box_asset","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","_id","button_box_home","classnames","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","highestbid","clicks","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_12__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","state","dispatch","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","leaderboard","name","time","Leaderboard","convertTime","start","moment","Date","now","duration","diff","days","hours","minutes","seconds","_this","sufix_leaderboard_when","_this2","react_default","title_leaderboard_bid","title_leaderboard_from","title_leaderboard_when","leaderboardData","map","item","index","key","Asset","classCallCheck","possibleConstructorReturn","getPrototypeOf","animateIn","asyncToGenerator","regenerator_default","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","onClickBid","cookiedata","cookies","get","email","setMineState","asset","setLoginState","getCopy","language","boxcopy","leaderoardcopy","Cookies","params","match","set","assetId","getData","setState","setAssetLoaded","ref","el","title_leaderboard","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"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","file":"static/js/4.489e4db8.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {}\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{0 + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className=\"box-info-image\">\n            <img src={this.props.data.image} alt={this.props.data.title} />\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">\n                    {this.props.data.highestbid + ' ' + this.props.copy.piramid_ico}\n                  </p>\n                  <p className=\"box-info-status-info\">{this.props.data.clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","export default [\n  {\n    _id: 'io_0faTg01',\n    bid: 1500,\n    image: 'https://i.pravatar.cc/80??u=324',\n    name: 'Elon Tusk',\n    time: 'July 15, 2021 02:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 1100,\n    image: 'https://i.pravatar.cc/80?u=aasd4d',\n    name: 'dhjnIK55',\n    time: 'July 14, 2021 02:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 800,\n    image: 'https://i.pravatar.cc/80??u=324',\n    name: 'Elon Tusk',\n    time: 'July 14, 2021 01:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 400,\n    image: 'https://i.pravatar.cc/80?u=aasd4d',\n    name: 'dhjnIK55',\n    time: 'July 13, 2021 01:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 300,\n    image: 'https://i.pravatar.cc/80?u=asdpop',\n    name: 'Juncalika',\n    time: 'July 13, 2021 00:13:00',\n    status: ''\n  },\n  {\n    _id: 'io_0faTg01',\n    bid: 100,\n    image: 'https://i.pravatar.cc/80?u=asdxczvx',\n    name: 'Mialoka',\n    time: 'July 12, 2021 00:13:00',\n    status: ''\n  }\n];\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\n\nimport './Leaderboard.scss';\n\n//temp\nimport leaderboardData from '../../data/leaderboard';\n\nclass Leaderboard extends React.PureComponent {\n  async componentDidMount() {}\n  componentDidUpdate(prevProps) {}\n\n  convertTime = time => {\n    const start = moment(new Date(time));\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    return (\n      duration.days() +\n      'd ' +\n      duration.hours() +\n      'h ' +\n      duration.minutes() +\n      'm ' +\n      duration.seconds() +\n      's ' +\n      this.props.copy.sufix_leaderboard_when\n    );\n  };\n\n  render() {\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{this.props.copy.title_leaderboard_bid}</th>\n              <th>{this.props.copy.title_leaderboard_from}</th>\n              <th>{this.props.copy.title_leaderboard_when}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {leaderboardData.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{item.bid + ' ' + this.props.copy.piramid_ico}</td>\n                  <td>\n                    <img src={item.image} alt=\"bid user avatar\" />\n                    <p>{item.name}</p>\n                  </td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  copy: PropTypes.object\n});\n\nLeaderboard.defaultProps = {\n  copy: {}\n};\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Leaderboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Cookies from 'universal-cookie';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { setAssetLoaded } from '../../redux/modules/asset';\nimport { setMineState } from '../../redux/modules/mine';\nimport { setLoginState } from '../../redux/modules/login';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\nimport { getCopy } from '../../data/get-site-data';\nimport { getData } from '../../data/get-site-data';\n\nimport './Asset.scss';\n\nclass Asset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { asset: {} };\n    this.copy = getCopy(this.props.language, 'asset');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n    this.leaderoardcopy = getCopy(this.props.language, 'leaderboard');\n    this.cookies = new Cookies();\n  }\n\n  async componentDidMount() {\n    const { params } = this.props.match;\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      if (params.assetId !== undefined) {\n        const asset = await getData(params.assetId);\n        this.setState({\n          asset: asset\n        });\n      }\n      this.props.setAssetLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  onClickBid = () => {\n    const cookiedata = this.cookies.get('pyramid');\n    if (cookiedata !== undefined && cookiedata.email !== undefined) {\n      this.props.setMineState(this.state.asset);\n    } else {\n      this.props.setLoginState(true);\n    }\n  };\n\n  render() {\n    return (\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Asset-container\">\n          <BoxInfo isSingle={true} clickFunction={this.onClickBid} copy={this.boxcopy} data={this.state.asset} />\n        </section>\n        <section className=\"Asset-container leaderboard\">\n          <h1>{this.copy.title_leaderboard}</h1>\n          <Leaderboard copy={this.leaderoardcopy} />\n        </section>\n      </div>\n    );\n  }\n}\n\nAsset.propTypes = checkProps({\n  language: PropTypes.string,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setAssetLoaded: PropTypes.func,\n  setMineState: PropTypes.func,\n  setLoginState: PropTypes.func\n});\n\nAsset.defaultProps = {\n  language: 'en',\n  loaded: false\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.assetLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\n    setMineState: val => dispatch(setMineState(val)),\n    setLoginState: val => dispatch(setLoginState(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Asset));\n"],"sourceRoot":""}