{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/gallery.js","pages/Gallery/Gallery.js","redux/modules/home.js","pages/Home/Home.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","prevProps","description","bid","assetinfo","reserve","userbid","classSingle","isSingle","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","dangerouslySetInnerHTML","__html","data","full_description","status","onClick","clickFunction","copy","button_box_asset","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","_id","button_box_home","classnames","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","highestbid","clicks","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_12__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","state","dispatch","reducerRegistry","register","action","type","keys","GALLERY_LOADED","loaded","Gallery","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","animateIn","asyncToGenerator","regenerator_default","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","assets","getCopy","language","set","assetdata","getData","setState","setGalleryLoaded","header","_this2","isHome","react_default","gallery_title","ref","el","filter","item","hot_sale","map","index","closed","key","BaseLink","sub_title","button_sold","button_view","ownProps","galleryLoaded","val","Transition","HOME_LOADED","Home","boxcopy","setHomeLoaded","hotsale","title_horsale","AdBanner","homeLoaded"],"mappings":"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","file":"static/js/3.a9c23aea.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {}\n  componentDidUpdate(prevProps) {}\n\n  render() {\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{0 + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className=\"box-info-image\">\n            <img src={this.props.data.image} alt={this.props.data.title} />\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">\n                    {this.props.data.highestbid + ' ' + this.props.copy.piramid_ico}\n                  </p>\n                  <p className=\"box-info-status-info\">{this.props.data.clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null\n};\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'galleryLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.GALLERY_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setGalleryLoaded(loaded) {\n  return {\n    type: keys.GALLERY_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport BaseLink from '../../components/BaseLink/BaseLink';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport { setGalleryLoaded } from '../../redux/modules/gallery';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { getData } from '../../data/get-site-data';\nimport { getCopy } from '../../data/get-site-data';\n\nimport './Gallery.scss';\n\nclass Gallery extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { assets: [] };\n    this.copy = getCopy(this.props.language, 'gallery');\n  }\n\n  async componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      let assets;\n      if (this.props.assetdata.length === 0) {\n        assets = await getData();\n      } else {\n        assets = this.props.assetdata.length;\n      }\n\n      this.setState({\n        assets: assets\n      });\n\n      this.props.setGalleryLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  render() {\n    let header;\n\n    if (this.props.isHome) {\n      header = (\n        <header className=\"Gallery-header\">\n          <h1>{this.copy.gallery_title}</h1>\n        </header>\n      );\n    }\n\n    return (\n      <div className={classnames('Gallery', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Gallery-container\">\n          {header}\n          <section className=\"Gallery-content\">\n            <ul className=\"gallery-list\">\n              {this.state.assets\n                .filter(item => !item.hot_sale || !this.props.isHome)\n                .map((item, index) => {\n                  let closed = item.status === 'closed';\n                  return (\n                    <li key={index} className=\"gallery-item\">\n                      <BaseLink className=\"gallery-item-content\" link={'./asset/' + item._id}>\n                        <div className=\"image-container\">\n                          <img src={item.image} alt=\"alt\" />\n                        </div>\n                        <h2 className=\"gallery-item-title\">{item.title}</h2>\n                        <div className=\"gallery-item-info\">\n                          {!this.props.isHome && <p className=\"gallery-item-info-title\">{item.sub_title}</p>}\n                          {this.props.isHome && <p className=\"gallery-item-info-bid\">{item.highestbid + ' Δ'}</p>}\n                          <button className={'gallery-item-info-button' + (closed ? '' : ' active')}>\n                            {closed ? this.copy.button_sold : this.copy.button_view}\n                          </button>\n                        </div>\n                      </BaseLink>\n                    </li>\n                  );\n                })}\n            </ul>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = checkProps({\n  language: PropTypes.string,\n  assetdata: PropTypes.array,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  isHome: PropTypes.bool,\n  setGalleryLoaded: PropTypes.func\n});\n\nGallery.defaultProps = {\n  language: 'en',\n  assetdata: []\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.galleryLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGalleryLoaded: val => dispatch(setGalleryLoaded(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Gallery));\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'homeLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.HOME_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setHomeLoaded(loaded) {\n  return {\n    type: keys.HOME_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Gallery from '../Gallery/Gallery';\nimport ADBanner from '../../components/AdBanner/AdBanner';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Transition from '../PagesTransitionWrapper';\nimport { setHomeLoaded } from '../../redux/modules/home';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { getCopy } from '../../data/get-site-data';\nimport { getData } from '../../data/get-site-data';\n\nimport './Home.scss';\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { assets: [] };\n    this.copy = getCopy(this.props.language, 'home');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n  }\n\n  async componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      const assets = await getData();\n      this.setState({\n        assets: assets\n      });\n      this.props.setHomeLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  render() {\n    const hotsale = this.state.assets.filter(item => item.hot_sale)[0];\n    return (\n      <section className={classnames('Home', this.props.className)} ref={el => (this.container = el)}>\n        <header className=\"Home-header\">\n          <div className=\"home-header-wrapper\">\n            <div className=\"home-header-box big\">\n              <h1>{this.copy.title_horsale}</h1>\n              <BoxInfo copy={this.boxcopy} data={hotsale} />\n            </div>\n            <div className=\"home-header-box small-top\">\n              <ADBanner />\n            </div>\n            <div className=\"home-header-box small-bottom\">\n              <ADBanner />\n            </div>\n          </div>\n        </header>\n        <Gallery\n          className=\"Home-galery\"\n          transitionState={this.props.transitionState}\n          isHome={true}\n          assetdata={this.state.assets}\n          language={this.props.language}\n        />\n      </section>\n    );\n  }\n}\n\nHome.propTypes = checkProps({\n  language: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setHomeLoaded: PropTypes.func\n});\n\nHome.defaultProps = {\n  language: 'en'\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.homeLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setHomeLoaded: val => dispatch(setHomeLoaded(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Home));\n"],"sourceRoot":""}