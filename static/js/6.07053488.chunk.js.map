{"version":3,"sources":["pages/PagesTransitionWrapper.js","redux/modules/gallery.js","pages/Gallery/Gallery.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","reducerRegistry","register","state","action","type","keys","GALLERY_LOADED","loaded","Gallery","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","animateIn","asyncToGenerator","regenerator_default","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","assets","copy","getCopy","language","set","assetdata","getData","setState","setGalleryLoaded","header","_this2","isHome","react_default","createElement","className","gallery_title","classnames","ref","el","filter","item","hot_sale","map","index","closed","status","key","BaseLink","link","_id","src","image","alt","title","sub_title","highestbid","button_sold","button_view","React","PureComponent","defaultProps","connect","ownProps","galleryLoaded","dispatch","val","Transition"],"mappings":"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","file":"static/js/6.07053488.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'galleryLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.GALLERY_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setGalleryLoaded(loaded) {\n  return {\n    type: keys.GALLERY_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport BaseLink from '../../components/BaseLink/BaseLink';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport { setGalleryLoaded } from '../../redux/modules/gallery';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { getData } from '../../data/get-site-data';\nimport { getCopy } from '../../data/get-site-data';\n\nimport './Gallery.scss';\n\nclass Gallery extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { assets: [] };\n    this.copy = getCopy(this.props.language, 'gallery');\n  }\n\n  async componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      let assets;\n      if (this.props.assetdata.length === 0) {\n        assets = await getData();\n      } else {\n        assets = this.props.assetdata.length;\n      }\n\n      this.setState({\n        assets: assets\n      });\n\n      this.props.setGalleryLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  render() {\n    let header;\n\n    if (this.props.isHome) {\n      header = (\n        <header className=\"Gallery-header\">\n          <h1>{this.copy.gallery_title}</h1>\n        </header>\n      );\n    }\n\n    return (\n      <div className={classnames('Gallery', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Gallery-container\">\n          {header}\n          <section className=\"Gallery-content\">\n            <ul className=\"gallery-list\">\n              {this.state.assets\n                .filter(item => !item.hot_sale || !this.props.isHome)\n                .map((item, index) => {\n                  let closed = item.status === 'closed';\n                  return (\n                    <li key={index} className=\"gallery-item\">\n                      <BaseLink className=\"gallery-item-content\" link={'./asset/' + item._id}>\n                        <div className=\"image-container\">\n                          <img src={item.image} alt=\"alt\" />\n                        </div>\n                        <h2 className=\"gallery-item-title\">{item.title}</h2>\n                        <div className=\"gallery-item-info\">\n                          {!this.props.isHome && <p className=\"gallery-item-info-title\">{item.sub_title}</p>}\n                          {this.props.isHome && <p className=\"gallery-item-info-bid\">{item.highestbid + ' Δ'}</p>}\n                          <button className={'gallery-item-info-button' + (closed ? '' : ' active')}>\n                            {closed ? this.copy.button_sold : this.copy.button_view}\n                          </button>\n                        </div>\n                      </BaseLink>\n                    </li>\n                  );\n                })}\n            </ul>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = checkProps({\n  language: PropTypes.string,\n  assetdata: PropTypes.array,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  isHome: PropTypes.bool,\n  setGalleryLoaded: PropTypes.func\n});\n\nGallery.defaultProps = {\n  language: 'en',\n  assetdata: []\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.galleryLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGalleryLoaded: val => dispatch(setGalleryLoaded(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Gallery));\n"],"sourceRoot":""}