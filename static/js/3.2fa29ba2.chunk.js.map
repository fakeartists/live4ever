{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/gallery.js","pages/Gallery/Gallery.js","redux/modules/home.js","pages/Home/Home.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","console","log","description","bid","assetinfo","reserve","userbid","classSingle","isSingle","highestbid","data","cookiedata","getCookie","variation","ubid","getBidWithVariation","bidData","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","dangerouslySetInnerHTML","__html","full_description","status","onClick","clickFunction","copy","button_box_asset","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","_id","button_box_home","classnames","previewFunction","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","clicks","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_12__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","state","mineIsOpen","mineState","dispatch","reducerRegistry","register","action","type","keys","GALLERY_LOADED","loaded","Gallery","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","animateIn","asyncToGenerator","regenerator_default","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","assets","getCopy","language","set","assetdata","getData","setState","setGalleryLoaded","header","_this2","isHome","react_default","gallery_title","ref","el","filter","item","hot_sale","map","index","closed","key","BaseLink","sub_title","button_sold","button_view","ownProps","galleryLoaded","val","Transition","HOME_LOADED","Home","boxcopy","setHomeLoaded","hotsale","title_horsale","AdBanner","homeLoaded"],"mappings":"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","file":"static/js/3.2fa29ba2.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\nimport { getCookie } from '../../util/cookies';\nimport { getBidWithVariation } from '../../util/bid';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {}\n\n  render() {\n    console.log('render');\n\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n\n    let highestbid = this.props.data.highestbid;\n\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n    let ubid = getBidWithVariation(cookiedata.bidData.bid, variation);\n    highestbid = ubid > highestbid ? ubid : highestbid;\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{ubid + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className=\"box-info-image\" onClick={this.props.previewFunction}>\n            <img src={this.props.data.image} alt={this.props.data.title} />\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            <div className=\"box-info-data-image\" onClick={this.props.previewFunction}>\n              <img src={this.props.data.image} alt={this.props.data.title} />\n            </div>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">{highestbid + ' ' + this.props.copy.piramid_ico}</p>\n                  <p className=\"box-info-status-info\">{this.props.data.clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func,\n  previewFunction: PropTypes.func,\n  mineIsOpen: PropTypes.object\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null,\n  previewFunction: null\n};\n\nconst mapStateToProps = state => ({\n  mineIsOpen: state.mineState.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'galleryLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.GALLERY_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setGalleryLoaded(loaded) {\n  return {\n    type: keys.GALLERY_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport BaseLink from '../../components/BaseLink/BaseLink';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport { setGalleryLoaded } from '../../redux/modules/gallery';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { getData } from '../../data/get-site-data';\nimport { getCopy } from '../../data/get-site-data';\n\nimport './Gallery.scss';\n\nclass Gallery extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = { assets: [] };\n    this.copy = getCopy(this.props.language, 'gallery');\n  }\n\n  async componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      let assets;\n      if (this.props.assetdata.length === 0) {\n        assets = await getData();\n      } else {\n        assets = this.props.assetdata.length;\n      }\n\n      this.setState({\n        assets: assets\n      });\n\n      this.props.setGalleryLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  render() {\n    let header;\n\n    if (this.props.isHome) {\n      header = (\n        <header className=\"Gallery-header\">\n          <h1>{this.copy.gallery_title}</h1>\n        </header>\n      );\n    }\n\n    return (\n      <div className={classnames('Gallery', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Gallery-container\">\n          {header}\n          <section className=\"Gallery-content\">\n            <ul className=\"gallery-list\">\n              {this.state.assets\n                .filter(item => !item.hot_sale || !this.props.isHome)\n                .map((item, index) => {\n                  let closed = item.status === 'closed';\n                  return (\n                    <li key={index} className=\"gallery-item\">\n                      <BaseLink className=\"gallery-item-content\" link={'./asset/' + item._id}>\n                        <div className=\"image-container\">\n                          <img src={item.image} alt=\"alt\" />\n                        </div>\n                        <h2 className=\"gallery-item-title\">{item.title}</h2>\n                        <div className=\"gallery-item-info\">\n                          {!this.props.isHome && <p className=\"gallery-item-info-title\">{item.sub_title}</p>}\n                          {this.props.isHome && <p className=\"gallery-item-info-bid\">{item.highestbid + ' Δ'}</p>}\n                          <button className={'gallery-item-info-button' + (closed ? '' : ' active')}>\n                            {closed ? this.copy.button_sold : this.copy.button_view}\n                          </button>\n                        </div>\n                      </BaseLink>\n                    </li>\n                  );\n                })}\n            </ul>\n          </section>\n        </section>\n      </div>\n    );\n  }\n}\n\nGallery.propTypes = checkProps({\n  language: PropTypes.string,\n  assetdata: PropTypes.array,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  isHome: PropTypes.bool,\n  setGalleryLoaded: PropTypes.func\n});\n\nGallery.defaultProps = {\n  language: 'en',\n  assetdata: []\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.galleryLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setGalleryLoaded: val => dispatch(setGalleryLoaded(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Gallery));\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'homeLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.HOME_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setHomeLoaded(loaded) {\n  return {\n    type: keys.HOME_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Gallery from '../Gallery/Gallery';\nimport ADBanner from '../../components/AdBanner/AdBanner';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Transition from '../PagesTransitionWrapper';\nimport { setHomeLoaded } from '../../redux/modules/home';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { getCopy } from '../../data/get-site-data';\nimport { getData } from '../../data/get-site-data';\n\nimport './Home.scss';\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { assets: [] };\n    this.copy = getCopy(this.props.language, 'home');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n  }\n\n  async componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      const assets = await getData();\n      this.setState({\n        assets: assets\n      });\n      this.props.setHomeLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  render() {\n    const hotsale = this.state.assets.filter(item => item.hot_sale)[0];\n    return (\n      <section className={classnames('Home', this.props.className)} ref={el => (this.container = el)}>\n        <header className=\"Home-header\">\n          <div className=\"home-header-wrapper\">\n            <div className=\"home-header-container home-box left\">\n              <h1>{this.copy.title_horsale}</h1>\n              <BoxInfo copy={this.boxcopy} data={hotsale} />\n            </div>\n            <div className=\"home-header-container  right\">\n              <div className=\"home-box small\">\n                <ADBanner />\n              </div>\n              <div className=\"home-box small\">\n                <ADBanner />\n              </div>\n            </div>\n          </div>\n        </header>\n        <Gallery\n          className=\"Home-galery\"\n          transitionState={this.props.transitionState}\n          isHome={true}\n          assetdata={this.state.assets}\n          language={this.props.language}\n        />\n      </section>\n    );\n  }\n}\n\nHome.propTypes = checkProps({\n  language: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setHomeLoaded: PropTypes.func\n});\n\nHome.defaultProps = {\n  language: 'en'\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.homeLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setHomeLoaded: val => dispatch(setHomeLoaded(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Home));\n"],"sourceRoot":""}