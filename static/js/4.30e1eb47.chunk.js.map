{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","_this","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","updateHighest","highest","setState","state","description","bid","assetinfo","reserve","userbid","imageOver","cookiedata","getCookie","variation","start","moment","Date","data","ends","now","duration","diff","durDays","Math","floor","asDays","classSingle","isSingle","status","isNaN","ubid","highestbid","haswebgl","webgl","clickimageFunction","clickFunction","previewFunction","copyclick","copy","image_click_bid","image_click","bidData","getBidWithVariation","clicks","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","className","dangerouslySetInnerHTML","__html","full_description","onClick","button_box_asset","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_10__","link","_id","button_box_home","classnames","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_11__","isLanding","endDate","React","PureComponent","defaultProps","connect","mineIsOpen","mineState","dispatch","withRef","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","Leaderboard","classCallCheck","possibleConstructorReturn","getPrototypeOf","getRank","id","login","index","leaderboard","findIndex","x","i","getHighest","updateLeaderboard","asyncToGenerator","regenerator_default","user","count","idx","getUsers","users","sent","t0","t1","done","value","hasOwnProperty","push","maxUsers","abrupt","getLeaderboard","sort","b","convertTime","time","hours","minutes","seconds","sufix_leaderboard_when","avatarPath","settings","prevProps","update","_this2","react_default","title_leaderboard_bid","title_leaderboard_from","title_leaderboard_when","map","item","key","image_alt","name","Asset","animateIn","prevSectionExitDuration","animateOut","animate","to","autoAlpha","ease","Expo","easeOut","onClickBid","checkCookieLogin","setMineState","asset","setLoginState","onOpenPreview","setAssetPreviewState","setAssetData","open","getWrappedInstance","boxinfo","getCopy","language","boxcopy","leaderoardcopy","params","match","set","assetId","getData","updateFunction","leadeboard","setAssetLoaded","ref","el","title_leaderboard","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"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","file":"static/js/4.30e1eb47.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\nimport { getCookie } from '../../util/cookies';\nimport { getBidWithVariation } from '../../util/bid';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { highest: 0 };\n  }\n\n  updateHighest = highest => {\n    this.setState({\n      highest: highest\n    });\n  };\n\n  render() {\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n\n    const start = moment(new Date(this.props.data.ends));\n    const now = moment();\n    const duration = moment.duration(start.diff(now));\n    let durDays = Math.floor(duration.asDays());\n\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n    let imageOver;\n    let status = durDays < 0 || isNaN(durDays) ? false : true;\n    let ubid = '-';\n\n    let highestbid = this.state.highest;\n    let haswebgl = this.props.data.webgl ? ' preview' : '';\n    let clickimageFunction = status ? this.props.clickFunction : this.props.previewFunction;\n    let copyclick = status ? this.props.copy.image_click_bid : this.props.copy.image_click;\n\n    if (status) {\n      ubid = cookiedata.bidData.bid;\n      highestbid = ubid > highestbid ? ubid : highestbid;\n      ubid = getBidWithVariation(ubid, variation);\n    }\n\n    let clicks = highestbid;\n    highestbid = getBidWithVariation(highestbid, variation);\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (status) {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      imageOver = (\n        <div className=\"box-info-image-overlay\">\n          <div className=\"box-info-image-overlay-ico\" />\n          <p>{copyclick}</p>\n        </div>\n      );\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (status) {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{ubid + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.short_description }} />\n      );\n      // haswebgl = '';\n      clickimageFunction = null;\n\n      imageOver = (\n        <BaseLink className=\"box-info-image-overlay\" link={'./asset/' + this.props.data._id}>\n          <div className=\"box-info-image-overlay-ico\" />\n          {/* <p>{this.props.copy.image_click}</p> */}\n        </BaseLink>\n      );\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className={'box-info-image' + haswebgl} onClick={clickimageFunction}>\n            <img src={this.props.data.image} alt={this.props.data.title} />\n            {imageOver}\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            <div className={'box-info-data-image' + haswebgl} onClick={clickimageFunction}>\n              <img src={this.props.data.image} alt={this.props.data.title} />\n              {imageOver}\n            </div>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">{highestbid + ' ' + this.props.copy.piramid_ico}</p>\n                  <p className=\"box-info-status-info\">{clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func,\n  previewFunction: PropTypes.func,\n  mineIsOpen: PropTypes.object\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null,\n  previewFunction: null\n};\n\nconst mapStateToProps = state => ({\n  mineIsOpen: state.mineState.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport checkProps from '@jam3/react-check-extra-props';\nimport settings from '../../data/settings';\nimport { getUsers, getLeaderboard } from '../../data/get-site-data';\nimport { getBidWithVariation } from '../../util/bid';\nimport { getCookie } from '../../util/cookies';\n\nimport './Leaderboard.scss';\n\nclass Leaderboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.avatarPath = settings.avatarPath;\n    this.maxUsers = 25;\n    this.state = { leaderboard: [] };\n  }\n\n  async componentDidMount() {\n    // await this.updateLeaderboard();\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  async getLeaderboard(update = false, status = '', user = '') {\n    if (update) {\n      await this.updateLeaderboard(status, user);\n    }\n    return this.state.leaderboard;\n  }\n\n  getRank = (bid = null) => {\n    const cookiedata = getCookie();\n    const id = cookiedata.login.id;\n    let index = this.state.leaderboard.findIndex(x => x._id === id);\n\n    if (bid != null) {\n      for (let i = index; i >= 0; i--) {\n        const value = this.state.leaderboard[i].bid;\n        if (bid >= value) {\n          index = i;\n        } else {\n          break;\n        }\n      }\n    }\n    return index + 1;\n  };\n\n  getHighest = () => {\n    const highest = this.state.leaderboard.length > 0 ? this.state.leaderboard[0].bid : 0;\n    return highest;\n  };\n\n  updateLeaderboard = async (status = '', user = '') => {\n    let leaderboard = [];\n    if (status === 'open') {\n      this.users = await getUsers();\n\n      let count = 0;\n      for (var idx in this.users) {\n        if (this.users.hasOwnProperty(idx)) {\n          leaderboard.push(this.users[idx]);\n        }\n        if (count >= this.maxUsers) break;\n        count++;\n      }\n    } else {\n      leaderboard = await getLeaderboard(user);\n    }\n\n    leaderboard.sort((a, b) => {\n      return a.bid > b.bid ? -1 : 1;\n    });\n\n    this.setState({\n      leaderboard: leaderboard\n    });\n  };\n\n  convertTime = time => {\n    const start = moment(new Date(time));\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    return (\n      Math.floor(duration.asDays()) +\n      'd ' +\n      duration.hours() +\n      'h ' +\n      duration.minutes() +\n      'm ' +\n      duration.seconds() +\n      's ' +\n      this.props.copy.sufix_leaderboard_when\n    );\n  };\n\n  render() {\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{this.props.copy.title_leaderboard_bid}</th>\n              <th>{this.props.copy.title_leaderboard_from}</th>\n              <th />\n              <th>{this.props.copy.title_leaderboard_when}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.leaderboard.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{getBidWithVariation(item.bid, variation) + ' ' + this.props.copy.piramid_ico}</td>\n                  <td>\n                    <img src={item.image || this.avatarPath + item._id} alt={this.props.copy.image_alt} />\n                  </td>\n                  <td>{item.name}</td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  copy: PropTypes.object\n});\n\nLeaderboard.defaultProps = {\n  copy: {}\n};\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(Leaderboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { setAssetLoaded } from '../../redux/modules/asset';\nimport { setMineState } from '../../redux/modules/mine';\nimport { setLoginState } from '../../redux/modules/login';\nimport { setAssetPreviewState } from '../../redux/modules/asset-preview';\nimport { setAssetData } from '../../redux/modules/asset-preview';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\nimport { getCopy, getData } from '../../data/get-site-data';\nimport { checkCookieLogin } from '../../util/cookies';\n\nimport './Asset.scss';\n\nclass Asset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { asset: {} };\n    this.copy = getCopy(this.props.language, 'asset');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n    this.leaderoardcopy = getCopy(this.props.language, 'leaderboard');\n  }\n\n  async componentDidMount() {\n    const { params } = this.props.match;\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      if (params.assetId !== undefined) {\n        const asset = await getData(params.assetId);\n        await this.leaderboard.getWrappedInstance().getLeaderboard(true, asset.status, asset._id);\n        asset.updateFunction = this.updateLeaderboard;\n        asset.leadeboard = this.leaderboard;\n\n        this.setState({\n          asset: asset\n        });\n\n        this.updateLeaderboard();\n      }\n      this.props.setAssetLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  onClickBid = () => {\n    if (checkCookieLogin()) {\n      this.props.setMineState(this.state.asset);\n    } else {\n      this.props.setLoginState(true);\n    }\n  };\n\n  onOpenPreview = () => {\n    if (this.state.asset.webgl) {\n      this.props.setAssetPreviewState(true);\n      this.props.setAssetData(this.state.asset.webgl);\n    } else if (this.state.asset.link) {\n      window.open(this.state.asset.link, '_blank');\n    }\n  };\n\n  updateLeaderboard = () => {\n    this.leaderboard.getWrappedInstance().updateLeaderboard(this.state.asset.status, this.state.asset._id);\n    this.boxinfo.getWrappedInstance().updateHighest(this.leaderboard.getWrappedInstance().getHighest());\n  };\n\n  render() {\n    return (\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Asset-container\">\n          <BoxInfo\n            isSingle={true}\n            clickFunction={this.onClickBid}\n            previewFunction={this.onOpenPreview}\n            copy={this.boxcopy}\n            data={this.state.asset}\n            ref={el => (this.boxinfo = el)}\n          />\n        </section>\n        <section className=\"Asset-container leaderboard\">\n          <h1>{this.copy.title_leaderboard}</h1>\n          <Leaderboard copy={this.leaderoardcopy} ref={el => (this.leaderboard = el)} />\n        </section>\n      </div>\n    );\n  }\n}\n\nAsset.propTypes = checkProps({\n  language: PropTypes.string,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setAssetLoaded: PropTypes.func,\n  setMineState: PropTypes.func,\n  setLoginState: PropTypes.func,\n  setAssetPreviewState: PropTypes.func,\n  setAssetData: PropTypes.func\n});\n\nAsset.defaultProps = {\n  language: 'en',\n  loaded: false\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.assetLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\n    setMineState: val => dispatch(setMineState(val)),\n    setLoginState: val => dispatch(setLoginState(val)),\n    setAssetPreviewState: val => dispatch(setAssetPreviewState(val)),\n    setAssetData: val => dispatch(setAssetData(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Asset));\n"],"sourceRoot":""}