{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","E_projects_fakeArtits_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","BoxInfo","description","bid","assetinfo","reserve","userbid","imageOver","classSingle","isSingle","highestbid","data","haswebgl","webgl","clickimage","previewFunction","cookiedata","getCookie","variation","ubid","getBidWithVariation","bidData","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","dangerouslySetInnerHTML","__html","full_description","status","onClick","clickFunction","copy","button_box_asset","image_click","title_chain","chain_info","title_contract","contract_address","title_token","token_id","title_blockchain","blockchain","title_reserve","piramid_ico","title_user_bid","short_description","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","_id","button_box_home","classnames","src","image","alt","title","title_edition","edition","separator_edition","sets","title_bid","clicks","sub_title_bid","title_time","_Counter_Counter__WEBPACK_IMPORTED_MODULE_12__","isLanding","endDate","ends","React","PureComponent","defaultProps","connect","state","mineIsOpen","mineState","dispatch","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","Leaderboard","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateLeaderboard","asyncToGenerator","regenerator_default","leaderboard","count","idx","getUsers","users","sent","t0","t1","done","value","hasOwnProperty","push","maxUsers","abrupt","sort","b","setState","convertTime","time","start","moment","Date","now","duration","diff","Math","floor","asDays","hours","minutes","seconds","sufix_leaderboard_when","avatarPath","settings","prevProps","_this2","react_default","title_leaderboard_bid","title_leaderboard_from","title_leaderboard_when","map","item","index","key","name","withRef","Asset","animateIn","prevSectionExitDuration","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","onClickBid","checkCookieLogin","setMineState","asset","setLoginState","onOpenPreview","setAssetPreviewState","setAssetData","getWrappedInstance","getCopy","language","boxcopy","leaderoardcopy","params","match","set","assetId","getData","updateFunction","setAssetLoaded","ref","el","title_leaderboard","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"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","file":"static/js/4.916d5f28.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport Counter from '../Counter/Counter';\nimport { getCookie } from '../../util/cookies';\nimport { getBidWithVariation } from '../../util/bid';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {}\n\n  render() {\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n    let imageOver;\n\n    let highestbid = this.props.data.highestbid;\n    let haswebgl = this.props.data.webgl ? ' preview' : '';\n    let clickimage = this.props.previewFunction;\n\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n    let ubid = getBidWithVariation(cookiedata.bidData.bid, variation);\n    highestbid = ubid > highestbid ? ubid : highestbid;\n\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\" dangerouslySetInnerHTML={{ __html: this.props.data.full_description }} />\n      );\n\n      if (this.props.data.status === 'open') {\n        bid = (\n          <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n            {this.props.copy.button_box_asset}\n          </button>\n        );\n      }\n\n      if (haswebgl !== '') {\n        imageOver = (\n          <div className=\"box-info-image-overlay\">\n            <div className=\"box-info-image-overlay-ico\" />\n            <p>{this.props.copy.image_click}</p>\n          </div>\n        );\n      }\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>{this.props.copy.title_chain}:</h1>\n              <p>{this.props.data.chain_info}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_contract}:</h1>\n              <p>{this.props.data.contract_address}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_token}:</h1>\n              <p>{this.props.data.token_id}</p>\n            </ul>\n            <ul>\n              <h1>{this.props.copy.title_blockchain}</h1>\n              <p>{this.props.data.blockchain}</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      if (this.props.data.reserve) {\n        reserve = (\n          <div className={'box-info-box ' + classSingle}>\n            <p className=\"box-info-status-top-title\">{this.props.copy.title_reserve}</p>\n            <p className=\"box-info-status-top-bid\">{this.props.data.reserve + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n\n      if (this.props.data.status === 'open') {\n        userbid = (\n          <div className=\"box-info-status-bid\">\n            <p className=\"box-info-status-bid-title\">{this.props.copy.title_user_bid}</p>\n            <p className=\"box-info-status-bid-bid\">{ubid + ' ' + this.props.copy.piramid_ico}</p>\n          </div>\n        );\n      }\n    } else {\n      description = <p className=\"box-info-desc\">{this.props.data.short_description}</p>;\n      haswebgl = '';\n      clickimage = null;\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/' + this.props.data._id}>\n          {this.props.copy.button_box_home}\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className={'box-info-image' + haswebgl} onClick={clickimage}>\n            <img src={this.props.data.image} alt={this.props.data.title} />\n            {imageOver}\n          </div>\n          <div className=\"box-info-data\">\n            <h2 className=\"box-info-data-title\">{this.props.data.title}</h2>\n            <p className=\"box-info-data-edition\">\n              {this.props.copy.title_edition +\n                ' ' +\n                this.props.data.edition +\n                ' ' +\n                this.props.copy.separator_edition +\n                ' ' +\n                this.props.data.sets}\n            </p>\n            <div className={'box-info-data-image' + haswebgl} onClick={clickimage}>\n              <img src={this.props.data.image} alt={this.props.data.title} />\n              {imageOver}\n            </div>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_bid}</p>\n                  <p className=\"box-info-status-top-bid\">{highestbid + ' ' + this.props.copy.piramid_ico}</p>\n                  <p className=\"box-info-status-info\">{this.props.data.clicks + ' ' + this.props.copy.sub_title_bid}</p>\n                </div>\n                <div className={'box-info-box ' + classSingle}>\n                  <p className=\"box-info-status-top-title\">{this.props.copy.title_time}</p>\n                  <Counter copy={this.props.copy} isLanding={false} endDate={this.props.data.ends} />\n                </div>\n                {reserve}\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  copy: PropTypes.object,\n  data: PropTypes.object,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func,\n  previewFunction: PropTypes.func,\n  mineIsOpen: PropTypes.object\n});\n\nBoxInfo.defaultProps = {\n  copy: {},\n  data: {},\n  isSingle: false,\n  clickFunction: null,\n  previewFunction: null\n};\n\nconst mapStateToProps = state => ({\n  mineIsOpen: state.mineState.data\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport checkProps from '@jam3/react-check-extra-props';\nimport settings from '../../data/settings';\nimport { getUsers } from '../../data/get-site-data';\nimport { getBidWithVariation } from '../../util/bid';\nimport { getCookie } from '../../util/cookies';\n\nimport './Leaderboard.scss';\n\nclass Leaderboard extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.avatarPath = settings.avatarPath;\n    this.maxUsers = 25;\n    this.state = { leaderboard: [] };\n  }\n\n  async componentDidMount() {\n    await this.updateLeaderboard();\n  }\n\n  componentDidUpdate(prevProps) {}\n\n  updateLeaderboard = async () => {\n    this.users = await getUsers();\n    const leaderboard = [];\n\n    let count = 0;\n    for (var idx in this.users) {\n      if (this.users.hasOwnProperty(idx)) {\n        leaderboard.push(this.users[idx]);\n      }\n      if (count >= this.maxUsers) break;\n      count++;\n    }\n\n    leaderboard.sort((a, b) => {\n      return a.bid > b.bid ? -1 : 1;\n    });\n\n    this.setState({\n      leaderboard: leaderboard\n    });\n  };\n\n  convertTime = time => {\n    const start = moment(new Date(time));\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    return (\n      Math.floor(duration.asDays()) +\n      'd ' +\n      duration.hours() +\n      'h ' +\n      duration.minutes() +\n      'm ' +\n      duration.seconds() +\n      's ' +\n      this.props.copy.sufix_leaderboard_when\n    );\n  };\n\n  render() {\n    const cookiedata = getCookie();\n    const variation = cookiedata && cookiedata.variation;\n\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{this.props.copy.title_leaderboard_bid}</th>\n              <th>{this.props.copy.title_leaderboard_from}</th>\n              <th>{this.props.copy.title_leaderboard_when}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.leaderboard.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{getBidWithVariation(item.bid, variation) + ' ' + this.props.copy.piramid_ico}</td>\n                  <td>\n                    <img src={item.image || this.avatarPath + item._id} alt=\"bid user avatar\" />\n                    <p>{item.name}</p>\n                  </td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  copy: PropTypes.object\n});\n\nLeaderboard.defaultProps = {\n  copy: {}\n};\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  null,\n  { withRef: true }\n)(Leaderboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport animate, { Expo } from '../../util/gsap-animate';\nimport { setAssetLoaded } from '../../redux/modules/asset';\nimport { setMineState } from '../../redux/modules/mine';\nimport { setLoginState } from '../../redux/modules/login';\nimport { setAssetPreviewState } from '../../redux/modules/asset-preview';\nimport { setAssetData } from '../../redux/modules/asset-preview';\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\nimport { getCopy, getData } from '../../data/get-site-data';\nimport { checkCookieLogin } from '../../util/cookies';\n\nimport './Asset.scss';\n\nclass Asset extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = { asset: {} };\n    this.copy = getCopy(this.props.language, 'asset');\n    this.boxcopy = getCopy(this.props.language, 'boxinfo');\n    this.leaderoardcopy = getCopy(this.props.language, 'leaderboard');\n  }\n\n  async componentDidMount() {\n    const { params } = this.props.match;\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      if (params.assetId !== undefined) {\n        const asset = await getData(params.assetId);\n\n        asset.updateFunction = this.updateLeaderboard;\n\n        this.setState({\n          asset: asset\n        });\n      }\n      this.props.setAssetLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  onClickBid = () => {\n    if (checkCookieLogin()) {\n      this.props.setMineState(this.state.asset);\n    } else {\n      this.props.setLoginState(true);\n    }\n  };\n\n  onOpenPreview = () => {\n    if (this.state.asset.webgl) {\n      this.props.setAssetPreviewState(true);\n      this.props.setAssetData(this.state.asset.webgl);\n    }\n  };\n\n  updateLeaderboard = () => {\n    this.leaderboard.getWrappedInstance().updateLeaderboard();\n  };\n\n  render() {\n    return (\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Asset-container\">\n          <BoxInfo\n            isSingle={true}\n            clickFunction={this.onClickBid}\n            previewFunction={this.onOpenPreview}\n            copy={this.boxcopy}\n            data={this.state.asset}\n          />\n        </section>\n        <section className=\"Asset-container leaderboard\">\n          <h1>{this.copy.title_leaderboard}</h1>\n          <Leaderboard copy={this.leaderoardcopy} ref={el => (this.leaderboard = el)} />\n        </section>\n      </div>\n    );\n  }\n}\n\nAsset.propTypes = checkProps({\n  language: PropTypes.string,\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setAssetLoaded: PropTypes.func,\n  setMineState: PropTypes.func,\n  setLoginState: PropTypes.func,\n  setAssetPreviewState: PropTypes.func,\n  setAssetData: PropTypes.func\n});\n\nAsset.defaultProps = {\n  language: 'en',\n  loaded: false\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.assetLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\n    setMineState: val => dispatch(setMineState(val)),\n    setLoginState: val => dispatch(setLoginState(val)),\n    setAssetPreviewState: val => dispatch(setAssetPreviewState(val)),\n    setAssetData: val => dispatch(setAssetData(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Asset));\n"],"sourceRoot":""}