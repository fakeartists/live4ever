{"version":3,"sources":["pages/PagesTransitionWrapper.js","components/App/App-selectors.js","components/BoxInfo/BoxInfo.js","redux/modules/asset.js","data/leaderboard.js","components/Leaderboard/Leaderboard.js","pages/Asset/Asset.js"],"names":["transitionStates","PagesTransitionWrapper","Class","container","handleEnterTransition","_ref","Object","_Users_fabio_Documents_Projects_live4ever_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_fabio_Documents_Projects_live4ever_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","previousRoute","onEnter","onAppear","transitionDuration","_args","arguments","wrap","_context","prev","next","length","undefined","noop","getExitTransitionDuration","wait","style","display","stop","this","_x","apply","componentDidMount","prototype","call","findDOMNode","window","scrollTo","props","transitionState","componentDidUpdate","handleLeaveTransition","onLeave","__webpack_require__","d","__webpack_exports__","selectWindowWidth","selectWindowHeight","selectPath","reselect__WEBPACK_IMPORTED_MODULE_0__","selectWindowSize","state","windowSize","createSelector","width","height","routing","location","pathname","BoxInfo","prevProps","description","bid","assetinfo","reserve","userbid","classSingle","isSingle","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","className","onClick","clickFunction","_BaseLink_BaseLink__WEBPACK_IMPORTED_MODULE_11__","link","classnames","src","alt","React","PureComponent","defaultProps","innerWidth","innerHeight","path","connect","dispatch","reducerRegistry","register","action","type","keys","ASSET_LOADED","loaded","leaderboard","header","event","value","from","time","itens","_id","image","name","status","Leaderboard","convertTime","start","moment","now","duration","diff","hours","minutes","seconds","_this2","react_default","leaderboardData","map","item","index","key","Asset","_this","animateIn","prevSectionExitDuration","regenerator_default","animateOut","animate","to","x","autoAlpha","ease","Expo","easeOut","onClickBid","setMineState","set","setAssetLoaded","ref","el","components_Leaderboard_Leaderboard","ownProps","assetLoaded","val","Transition"],"mappings":"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","file":"static/js/4.00f136b5.chunk.js","sourcesContent":["import noop from 'no-op';\nimport { findDOMNode } from 'react-dom';\nimport wait from '@jam3/wait';\n\nimport { getExitTransitionDuration } from '../data/pages-transitions';\n\nconst transitionStates = {\n  entering: 'entering',\n  entered: 'entered',\n  exiting: 'exiting',\n  exited: 'exited'\n};\n\nconst PagesTransitionWrapper = Class => {\n  let container;\n  const handleEnterTransition = async (previousRoute, onEnter = noop, onAppear = noop) => {\n    // console.log('in::' + transitionStates);\n\n    if (previousRoute) {\n      const transitionDuration = getExitTransitionDuration(previousRoute) || 0;\n      onEnter(transitionDuration);\n      await wait(transitionDuration);\n      container.style.display = '';\n    } else {\n      container.style.display = '';\n      onAppear();\n    }\n  };\n\n  const handleLeaveTransition = (onLeave = noop) => {\n    // console.log('out::' + transitionStates);\n    onLeave();\n  };\n\n  const componentDidMount = Class.prototype.componentDidMount;\n  Class.prototype.componentDidMount = function() {\n    componentDidMount && componentDidMount.call(this);\n    container = findDOMNode(this);\n    container.style.display = 'none';\n\n    window.scrollTo(0, 0);\n\n    if (\n      this.props.transitionState === transitionStates.entered ||\n      this.props.transitionState === transitionStates.entering\n    ) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    }\n  };\n\n  const componentDidUpdate = Class.prototype.componentDidUpdate;\n  Class.prototype.componentDidUpdate = function() {\n    componentDidUpdate && componentDidUpdate.apply(this, arguments);\n    if (this.props.transitionState === transitionStates.entering) {\n      handleEnterTransition(this.props.previousRoute, this.onEnter, this.onAppear);\n    } else if (this.props.transitionState === transitionStates.exiting) {\n      handleLeaveTransition(this.onLeave);\n    }\n  };\n\n  return Class;\n};\n\nexport default PagesTransitionWrapper;\n","import { createSelector } from 'reselect';\n\nconst selectWindowSize = state => state.windowSize;\nconst selectRouting = state => state.routing.location;\n\n// Window Size\nexport const selectWindowWidth = createSelector(\n  selectWindowSize,\n  windowSize => windowSize.width\n);\nexport const selectWindowHeight = createSelector(\n  selectWindowSize,\n  windowSize => windowSize.height\n);\n\n// Routing\nexport const selectPath = createSelector(\n  selectRouting,\n  location => location.pathname\n);\n\n// Locale\nexport const selectCopy = state => {\n  return state.locale.copy;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport BaseLink from '../BaseLink/BaseLink';\nimport { selectWindowWidth, selectWindowHeight, selectPath } from '../App/App-selectors';\n\nimport './BoxInfo.scss';\n\nclass BoxInfo extends React.PureComponent {\n  async componentDidMount() {\n    //const { path, history } = this.props;\n  }\n\n  componentDidUpdate(prevProps) {\n    //const { width, height, path } = this.props;\n  }\n\n  render() {\n    let classSingle = this.props.isSingle ? 'single' : '';\n    let description;\n    let bid;\n    let assetinfo;\n    let reserve;\n    let userbid;\n    if (this.props.isSingle) {\n      description = (\n        <p className=\"box-info-desc\">\n          Have you always wondered of what you could do if you were immortal? PYRΔMID can make your dream come true. Now\n          with a few clicks you can acquire the <b>FIRST HUMAN POWERED</b> NFT that will save a hard copy of yourself on\n          the blockchain, FOREVER. However it’s a <b>TIME LIMITED OFFER</b>, so start bidding now to get the chance to\n          become immortal.\n        </p>\n      );\n\n      bid = (\n        <button className=\"box-info-button cta\" onClick={this.props.clickFunction}>\n          BID NOW\n        </button>\n      );\n\n      assetinfo = (\n        <div className=\"box-info-asset\">\n          <li>\n            <ul>\n              <h1>Chain Info:</h1>\n              <p>NA</p>\n            </ul>\n            <ul>\n              <h1>Contract Address:</h1>\n              <p>FΔKE NUmb3rs</p>\n            </ul>\n            <ul>\n              <h1>Token ID:</h1>\n              <p>782736392920208742920377</p>\n            </ul>\n            <ul>\n              <h1>Blockchain:</h1>\n              <p>PYRΔMID</p>\n            </ul>\n          </li>\n        </div>\n      );\n\n      reserve = (\n        <li className={classSingle}>\n          <p className=\"box-info-status-top-title\">Reserve price</p>\n          <p className=\"box-info-status-top-bid\">25.00 Δ</p>\n        </li>\n      );\n\n      userbid = (\n        <div className=\"box-info-status-bid\">\n          <p className=\"box-info-status-bid-title\">Your Bid</p>\n          <p className=\"box-info-status-bid-bid\">200.00 Δ</p>\n        </div>\n      );\n    } else {\n      description = (\n        <p className=\"box-info-desc\">\n          Thus unique NFT will grant you digital immortality by unlocking your digital twin.\n        </p>\n      );\n\n      bid = (\n        <BaseLink className=\"box-info-button cta\" link={'./asset/eternity'}>\n          LEARN MORE\n        </BaseLink>\n      );\n    }\n\n    return (\n      <div className={classnames(`box-info`, classSingle)}>\n        <div className=\"box-info-bid\">\n          <div className=\"box-info-image\">\n            <img src=\"https://www.indiewire.com/wp-content/uploads/2019/12/avatar-2.jpg\" alt=\"alt\" />\n          </div>\n          <div className=\"box-info-data\">\n            <h2>Immortal #4</h2>\n            <p>Edition 1 of 1</p>\n            {description}\n            <div className=\"box-info-status\">\n              <div className=\"box-info-status-top\">\n                <ul>\n                  <li className={classSingle}>\n                    <p className=\"box-info-status-top-title\">Highest Bid</p>\n                    <p className=\"box-info-status-top-bid\">200.00 Δ</p>\n                    <p className=\"box-info-status-info\">15,000 clicks</p>\n                  </li>\n                  <li className={classSingle}>\n                    <p className=\"box-info-status-top-title\">Auction ending in</p>\n                    <div className=\"box-info-status-top-counter\">\n                      <ul>\n                        <li className=\"counter-day\">3</li>\n                        <li className=\"counter-hour\">16</li>\n                        <li className=\"counter-min\">21</li>\n                      </ul>\n                    </div>\n                    <div className=\"box-info-status-info\">\n                      <ul>\n                        <li className=\"counter-info-day\">Days</li>\n                        <li className=\"counter-info-hour\">Hours</li>\n                        <li className=\"counter-info-min\">Minutes</li>\n                      </ul>\n                    </div>\n                  </li>\n                  {reserve}\n                </ul>\n              </div>\n              <div className=\"box-info-status-bottom\">\n                {bid}\n                {userbid}\n              </div>\n            </div>\n          </div>\n        </div>\n        {assetinfo}\n      </div>\n    );\n  }\n}\n\nBoxInfo.propTypes = checkProps({\n  width: PropTypes.number,\n  height: PropTypes.number,\n  path: PropTypes.string,\n  isSingle: PropTypes.bool,\n  clickFunction: PropTypes.func\n});\n\nBoxInfo.defaultProps = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n  path: '',\n  isSingle: false,\n  clickFunction: null\n};\n\nconst mapStateToProps = state => ({\n  width: selectWindowWidth(state),\n  height: selectWindowHeight(state),\n  path: selectPath(state)\n});\n\n//Dispatch props here\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BoxInfo);\n","import keys from '../keys';\nimport reducerRegistry from '../reducer-registry';\n\nconst reducerName = 'assetLoaded';\n\n// Reducer\nexport default function reducer(state = false, action) {\n  switch (action.type) {\n    case keys.ASSET_LOADED:\n      return action.loaded;\n    default:\n      return state;\n  }\n}\n\n// Action Creators\nexport function setAssetLoaded(loaded) {\n  return {\n    type: keys.ASSET_LOADED,\n    loaded\n  };\n}\n\n// Register Reducers\nreducerRegistry.register(reducerName, reducer);\n","export default {\n  header: {\n    event: 'Event',\n    value: '#Δ',\n    from: 'From',\n    time: 'Time'\n  },\n  itens: [\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 1500,\n      image: 'https://i.pravatar.cc/80??u=324',\n      name: 'ElonTusk',\n      time: 1624491342110,\n      status: ''\n    },\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 1100,\n      image: 'https://i.pravatar.cc/80?u=aasd4d',\n      name: 'dhjnIK55',\n      time: 1624491332110,\n      status: ''\n    },\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 800,\n      image: 'https://i.pravatar.cc/80??u=324',\n      name: 'ElonTusk',\n      time: 1624491332009,\n      status: ''\n    },\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 400,\n      image: 'https://i.pravatar.cc/80?u=aasd4d',\n      name: 'dhjnIK55',\n      time: 1624491331000,\n      status: ''\n    },\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 300,\n      image: 'https://i.pravatar.cc/80?u=asdpop',\n      name: 'Juncalika',\n      time: 1624481330000,\n      status: ''\n    },\n    {\n      _id: 'io_0faTg01',\n      event: 'Bid',\n      value: 100,\n      image: 'https://i.pravatar.cc/80?u=asdxczvx',\n      name: 'Mialoka',\n      time: 1624471320000,\n      status: ''\n    }\n  ]\n};\n","import React from 'react';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport checkProps from '@jam3/react-check-extra-props';\nimport { connect } from 'react-redux';\nimport { selectWindowWidth, selectWindowHeight, selectPath } from '../App/App-selectors';\n\nimport './Leaderboard.scss';\n\n//temp\nimport leaderboardData from '../../data/leaderboard';\n\nclass Leaderboard extends React.PureComponent {\n  async componentDidMount() {\n    //const { path, history } = this.props;\n  }\n\n  componentDidUpdate(prevProps) {\n    //const { width, height, path } = this.props;\n  }\n\n  convertTime = time => {\n    const start = moment(time);\n    const now = moment();\n    const duration = moment.duration(now.diff(start));\n    //duration.days() + 'd ' +\n    return duration.hours() + 'h ' + duration.minutes() + 'm ' + duration.seconds() + 's';\n  };\n\n  render() {\n    return (\n      <div className={classnames(`Leaderboard-content`)}>\n        <table>\n          <thead>\n            <tr>\n              <th>{leaderboardData.header.event}</th>\n              <th>{leaderboardData.header.value}</th>\n              <th>{leaderboardData.header.from}</th>\n              <th>{leaderboardData.header.time}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {leaderboardData.itens.map((item, index) => {\n              return (\n                <tr key={index} className=\"Leaderboard-item\">\n                  <td>{item.event}</td>\n                  <td>{item.value}</td>\n                  <td>\n                    <img src={item.image} alt=\"bid user avatar\" />\n                    <p>{item.name}</p>\n                  </td>\n                  <td>{this.convertTime(item.time)}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = checkProps({\n  width: PropTypes.number,\n  height: PropTypes.number,\n  path: PropTypes.string\n});\n\nLeaderboard.defaultProps = {\n  width: window.innerWidth,\n  height: window.innerHeight,\n  path: ''\n};\n\nconst mapStateToProps = state => ({\n  width: selectWindowWidth(state),\n  height: selectWindowHeight(state),\n  path: selectPath(state)\n});\n\n//Dispatch props here\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Leaderboard);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\n//import wait from '@jam3/wait';\nimport checkProps from '@jam3/react-check-extra-props';\nimport Transition from '../PagesTransitionWrapper';\nimport animate, { Expo } from '../../util/gsap-animate';\n\nimport { setAssetLoaded } from '../../redux/modules/asset';\nimport { setMineState } from '../../redux/modules/mine';\n\nimport BoxInfo from '../../components/BoxInfo/BoxInfo';\nimport Leaderboard from '../../components/Leaderboard/Leaderboard';\n\nimport './Asset.scss';\n\nclass Asset extends React.PureComponent {\n  componentDidMount() {\n    animate.set(this.container, { x: '100%', autoAlpha: 0 });\n\n    if (!this.props.loaded) {\n      this.props.setAssetLoaded(true);\n    }\n  }\n\n  onAppear = () => {\n    this.animateIn();\n  };\n\n  onEnter = async prevSectionExitDuration => {\n    //await wait(prevSectionExitDuration);\n    this.animateIn();\n  };\n\n  onLeave = () => {\n    this.animateOut();\n  };\n\n  animateIn = () => {\n    animate.to(this.container, 0.8, { x: '0%', autoAlpha: 1, ease: Expo.easeOut });\n  };\n\n  animateOut = () => {\n    animate.to(this.container, 0.1, { x: '0%', autoAlpha: 0, ease: Expo.easeOut });\n  };\n\n  onClickBid = () => {\n    this.props.setMineState(true);\n  };\n\n  render() {\n    // const { params } = this.props.match;\n    return (\n      <div className={classnames('Asset', this.props.className)} ref={el => (this.container = el)}>\n        <section className=\"Asset-container\">\n          <BoxInfo isSingle={true} clickFunction={this.onClickBid} />\n        </section>\n        <section className=\"Asset-container leaderboard\">\n          <h1>Leaderboard</h1>\n          <Leaderboard />\n        </section>\n      </div>\n    );\n  }\n}\n\nAsset.propTypes = checkProps({\n  className: PropTypes.string,\n  transitionState: PropTypes.string.isRequired,\n  previousRoute: PropTypes.string,\n  loaded: PropTypes.bool,\n  setAssetLoaded: PropTypes.func,\n  setMineState: PropTypes.func\n});\n\nAsset.defaultProps = {\n  loaded: false\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    previousRoute: state.previousRoute,\n    loaded: state.assetLoaded.loaded\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setAssetLoaded: val => dispatch(setAssetLoaded(val)),\n    setMineState: val => dispatch(setMineState(val))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Transition(Asset));\n"],"sourceRoot":""}