{"version":3,"sources":["components/RotateScreen/RotateScreen.js"],"names":["RotateScreen","props","_this","Object","C_Ben_X_Tan_Projects_Fake_Artists_live4ever_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Ben_X_Tan_Projects_Fake_Artists_live4ever_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Ben_X_Tan_Projects_Fake_Artists_live4ever_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","preventScrolling","e","preventDefault","stopPropagation","setOrientationParentClass","arguments","length","undefined","state","orientation","document","body","classList","add","remove","handleOrientationChange","device","getOrientation","setState","os","isAndroid","window","addEventListener","container","passive","prevProps","prevState","removeEventListener","_this2","style","visibility","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","classnames","ref","r","iconSrc","src","alt","iconAlt","copy","children","PureComponent","defaultProps"],"mappings":"6PASqBA,sBACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAiCRQ,iBAAmB,SAAAC,GACjBA,EAAEC,iBACFD,EAAEE,mBApCeV,EAuCnBW,0BAA4B,WACV,eADoDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3BZ,EAAKe,MAAMC,aAEhDC,SAASC,KAAKC,UAAUC,IAAI,yBAC5BH,SAASC,KAAKC,UAAUE,OAAO,0BA1ClBrB,EA6CnBsB,wBAA0B,WACpBC,IAAOC,mBAAqBxB,EAAKe,MAAMC,aACzChB,EAAKyB,SAAS,CAAET,YAAaO,IAAOC,oBA7CtCxB,EAAKe,MAAQ,CACXC,YAAaO,IAAOC,kBAHLxB,mFAQjBG,KAAKQ,4BAEDe,IAAGC,UACLC,OAAOC,iBAAiB,oBAAqB1B,KAAKmB,yBAElDM,OAAOC,iBAAiB,SAAU1B,KAAKmB,yBAGzCnB,KAAK2B,UAAUD,iBAAiB,YAAa1B,KAAKI,iBAAkB,CAAEwB,SAAS,+CAG9DC,EAAWC,GACxB9B,KAAKY,MAAMC,cAAgBiB,EAAUjB,aACvCb,KAAKQ,2EAKHe,IAAGC,UACLC,OAAOM,oBAAoB,oBAAqB/B,KAAKmB,yBAErDM,OAAOM,oBAAoB,SAAU/B,KAAKmB,yBAE5CnB,KAAK2B,UAAUI,oBAAoB,YAAa/B,KAAKI,mDAoB9C,IAAA4B,EAAAhC,KAEDiC,EAAQ,CACZC,WAFyC,cAA3BlC,KAAKY,MAAMC,YAEH,UAAY,UAGpC,OACEsB,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAW,eAAgBvC,KAAKJ,MAAM0C,WAAYL,MAAOA,EAAOO,IAAK,SAAAC,GAAC,OAAKT,EAAKL,UAAYc,IAC1GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZtC,KAAKJ,MAAM8C,SAAWP,EAAAC,EAAAC,cAAA,OAAKM,IAAK3C,KAAKJ,MAAM8C,QAASJ,UAAU,cAAcM,IAAK5C,KAAKJ,MAAMiD,UAC5F7C,KAAKJ,MAAMkD,MAAQX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAetC,KAAKJ,MAAMkD,MAC1D9C,KAAKJ,MAAMmD,kBA/DoBC,kBA4E1CrD,EAAasD,aAAe,CAC1BH,KAAM,gDACND,QAAS","file":"static/js/8.f15dbc98.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport 'default-passive-events';\r\nimport checkProps from '@jam3/react-check-extra-props';\r\nimport { device, os } from '@jam3/detect';\r\n\r\nimport './RotateScreen.scss';\r\n\r\nexport default class RotateScreen extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      orientation: device.getOrientation()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setOrientationParentClass();\r\n\r\n    if (os.isAndroid) {\r\n      window.addEventListener('orientationchange', this.handleOrientationChange);\r\n    } else {\r\n      window.addEventListener('resize', this.handleOrientationChange);\r\n    }\r\n\r\n    this.container.addEventListener('touchmove', this.preventScrolling, { passive: false });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.orientation !== prevState.orientation) {\r\n      this.setOrientationParentClass();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (os.isAndroid) {\r\n      window.removeEventListener('orientationchange', this.handleOrientationChange);\r\n    } else {\r\n      window.removeEventListener('resize', this.handleOrientationChange);\r\n    }\r\n    this.container.removeEventListener('touchmove', this.preventScrolling);\r\n  }\r\n\r\n  preventScrolling = e => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  };\r\n\r\n  setOrientationParentClass = (orientation = this.state.orientation) => {\r\n    orientation === 'landscape'\r\n      ? document.body.classList.add('rotate-screen-visible')\r\n      : document.body.classList.remove('rotate-screen-visible');\r\n  };\r\n\r\n  handleOrientationChange = () => {\r\n    if (device.getOrientation() !== this.state.orientation) {\r\n      this.setState({ orientation: device.getOrientation() });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const visible = this.state.orientation === 'landscape';\r\n    const style = {\r\n      visibility: visible ? 'visible' : 'hidden'\r\n    };\r\n\r\n    return (\r\n      <div className={classnames('RotateScreen', this.props.className)} style={style} ref={r => (this.container = r)}>\r\n        <div className=\"container\">\r\n          {this.props.iconSrc && <img src={this.props.iconSrc} className=\"rotate-icon\" alt={this.props.iconAlt} />}\r\n          {this.props.copy && <p className=\"rotate-text\">{this.props.copy}</p>}\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRotateScreen.propTypes = checkProps({\r\n  copy: PropTypes.string,\r\n  iconSrc: PropTypes.string,\r\n  iconAlt: PropTypes.string\r\n});\r\n\r\nRotateScreen.defaultProps = {\r\n  copy: 'Please rotate your device into portrait mode.',\r\n  iconAlt: 'Please rotate your device'\r\n};\r\n"],"sourceRoot":""}