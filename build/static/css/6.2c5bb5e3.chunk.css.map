{"version":3,"sources":["C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/About.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/vars.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/About/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/mixins.scss"],"names":[],"mappings":"AAEA,OACE,iBAAA,CACA,UAAA,CACA,iBAAA,CACA,UAAA,CACA,eAAA,CACA,YCuC0B,CDrC1B,0BARF,OASI,iBCqCyB,CAAA,CD9C7B,UAaI,eAAA,CEgCF,+CAAA,CACA,kBAAA,CACA,eAAA,CFhCE,aAAA,CACA,gBAAA,CACA,gBAAA,CACA,eAAgB,CAlBpB,SAsBI,aAAA,CACA,gBAAA,CACA,gBAAA,CACA,aAAA,CACA,eAAgB","file":"6.2c5bb5e3.chunk.css","sourcesContent":["@import 'src/style/shared.scss';\r\n\r\n.About {\r\n  position: relative;\r\n  float: left;\r\n  text-align: center;\r\n  z-index: 50;\r\n  margin: px-to-rem(80) 0 0 0;\r\n  padding: px-to-rem(20) $navbar-padding-mobile;\r\n\r\n  @media (min-width: $layout-large) {\r\n    padding: px-to-rem(20) $navbar-padding-desktop;\r\n  }\r\n\r\n  h1 {\r\n    margin: px-to-rem(0) 0 px-to-rem(30) 0;\r\n    @include font-title;\r\n    color: $pink;\r\n    font-size: px-to-rem(24);\r\n    line-height: px-to-rem(30);\r\n    text-align: left;\r\n  }\r\n\r\n  p {\r\n    margin: px-to-rem(20) 0 px-to-rem(20) 0;\r\n    font-size: px-to-rem(14);\r\n    line-height: px-to-rem(20);\r\n    color: $green;\r\n    text-align: left;\r\n  }\r\n}\r\n","@import 'layout.scss';\r\n\r\n$base-image-path: '../../assets/images/';\r\n\r\n// Variables\r\n//\r\n// Add global variables here, color palette, those variables shared by components all applied to global styling\r\n\r\n// ====================================================================\r\n// Breakpoints\r\n//\r\n// Window breakpoints\r\n// ====================================================================\r\n$layout-medium: map-get($layout, medium) + px;\r\n$layout-large: map-get($layout, large) + px;\r\n$layout-xlarge: map-get($layout, xlarge) + px;\r\n\r\n// ====================================================================\r\n// Base palette\r\n//\r\n// Grayscale and brand colors for use across the site.\r\n// ====================================================================\r\n$white: #fff;\r\n$black: #000;\r\n$blacktint: rgba(0, 0, 0, 0.8);\r\n$green: #42ff00;\r\n$greentint: rgba(#42ff00, 0.1);\r\n$greentint-dark: rgba(#42ff00, 0.3);\r\n$pink: #fa00ff;\r\n$gray: rgba(255, 255, 255, 0.3);\r\n\r\n// ====================================================================\r\n// General\r\n//\r\n// Global color variables, used usually in sections\r\n// Global variables used across the web app\r\n// ====================================================================\r\n$page-bg-color: $white;\r\n$rotate-screen-bg-color: $black;\r\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\r\n$generic-fonts: Helvetica, Arial, sans-serif;\r\n\r\n// ====================================================================\r\n// Nav bar\r\n// ====================================================================\r\n$navbar-height-mobile: px-to-rem(130);\r\n$navbar-height-desktop: px-to-rem(130);\r\n$navbar-padding-mobile: 2rem;\r\n$navbar-padding-desktop: 4rem;\r\n\r\n// ====================================================================\r\n// List of z-index element\r\n// ====================================================================\r\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\r\n","// Sass Mixins\r\n//\r\n// More information about mixins in:\r\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\r\n// Add comment to every function\r\n@import 'vars.scss';\r\n\r\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-light();\r\n///   }\r\n@mixin font-light() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-regular();\r\n///   }\r\n@mixin font-regular() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 400;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-bold() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 500;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-title() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-h1() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-special() {\r\n  font-family: 'DigitalNumbers', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Improve animation performance for containers\r\n/// @example scss Input\r\n///   .card {\r\n///     @include gpu();\r\n///   }\r\n@mixin gpu {\r\n  backface-visibility: hidden;\r\n  transform-style: preserve-3d;\r\n  perspective: 1000px;\r\n\r\n  .safari & {\r\n    perspective: none; // otherwise text and icons become blurry\r\n  }\r\n}\r\n\r\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\r\n/// @parameter {Measure unit} $width - Specify width of the box\r\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\r\n/// @example scss Input\r\n///   .card {\r\n///     @include box(3.2rem);\r\n///   }\r\n///   .card-another {\r\n///     @include box(3.2rem, 2rem);\r\n///   }\r\n@mixin box($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\r\n/// @example scss Input\r\n///   section {\r\n///     height: pxToRem(200);\r\n///   }\r\n@function px-to-rem($px) {\r\n  @return $px * 0.1rem;\r\n}\r\n\r\n/// Set top and left to 0\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-0;\r\n///   }\r\n@mixin position-0 {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n/// Set full size of box and position\r\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-100(absolute);\r\n///   }\r\n@mixin position-100($pos: 'relative') {\r\n  position: $pos;\r\n  @include position-0;\r\n  @include box(100%);\r\n}\r\n\r\n/// Set display flex and center children horizontally and vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center;\r\n///   }\r\n@mixin flex-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/// Set display flex and center children vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-vert;\r\n///   }\r\n@mixin flex-center-vert {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/// Set display flex and center children horizontally\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-horiz;\r\n///   }\r\n@mixin flex-center-horiz {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/// Center its element (horizontally and vertically) by using transform\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center;\r\n///   }\r\n@mixin transform-center {\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n}\r\n\r\n/// Set vertical center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-vert;\r\n///   }\r\n@mixin transform-center-vert {\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Set horizontal center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-horiz;\r\n///   }\r\n@mixin transform-center-horiz {\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n/// Set z-index value in order of $element variable\r\n/// @example scss Input\r\n///   element {\r\n///     @include z-index(preloader);\r\n///   }\r\n@mixin z-index($id) {\r\n  z-index: index($elements, $id);\r\n}\r\n\r\n/// Reset button's look\r\n/// @example scss Input\r\n///   button {\r\n///     @include reset-button;\r\n///   }\r\n@mixin reset-button {\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  padding: 0;\r\n  text-align: inherit;\r\n  letter-spacing: inherit;\r\n  font-size: inherit;\r\n  text-transform: inherit;\r\n  color: inherit;\r\n}\r\n\r\n@mixin title {\r\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\r\n  @include font-title;\r\n  text-transform: uppercase;\r\n  color: $pink;\r\n  font-size: px-to-rem(24);\r\n  line-height: px-to-rem(20);\r\n  text-align: left;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@mixin main-button {\r\n  background-color: transparent;\r\n  padding: px-to-rem(13) px-to-rem(35);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background-color: $greentint-dark;\r\n    background-color: $green;\r\n    color: $black;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin main-button-cta {\r\n  background-color: $green;\r\n  padding: px-to-rem(13) px-to-rem(20);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $pink;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: $pink;\r\n    color: $black;\r\n    border: 1px $pink solid;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin item-button {\r\n  text-transform: uppercase;\r\n  padding: px-to-rem(3) px-to-rem(3);\r\n  background-color: transparent;\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  &.active {\r\n    text-transform: none;\r\n    background-color: $green;\r\n    color: $black;\r\n  }\r\n\r\n  &.active:hover {\r\n    cursor: pointer;\r\n    border: 1px $pink solid;\r\n    background-color: $pink;\r\n    color: $black;\r\n  }\r\n\r\n  &.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n"]}