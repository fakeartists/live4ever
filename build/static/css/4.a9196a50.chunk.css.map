{"version":3,"sources":["C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/BoxInfo.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/mixins.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/BoxInfo/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/vars.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/Leaderboard/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/Leaderboard/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/components/Leaderboard/Leaderboard.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/Asset.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/vars.scss","C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/pages/Asset/C:/Ben X Tan/Projects/Fake Artists/live4ever/src/style/mixins.scss"],"names":[],"mappings":"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","file":"4.a9196a50.chunk.css","sourcesContent":["@import 'src/style/shared.scss';\r\n\r\n.box-info {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n\r\n  .box-info-bid {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-content: stretch;\r\n  }\r\n\r\n  .box-info-asset {\r\n    @include font-light();\r\n    width: 100%;\r\n\r\n    li {\r\n      margin: px-to-rem(20) 0 0 0;\r\n      list-style: none;\r\n\r\n      ul {\r\n        width: 100%;\r\n        position: relative;\r\n        float: left;\r\n        text-align: left;\r\n\r\n        h1 {\r\n          position: relative;\r\n          float: left;\r\n          color: $white;\r\n          width: 10%;\r\n          min-width: 130px;\r\n          font-size: px-to-rem(8);\r\n          line-height: px-to-rem(16);\r\n          margin: 0;\r\n        }\r\n\r\n        p {\r\n          position: relative;\r\n          float: left;\r\n          width: 90%;\r\n          color: $green;\r\n          font-size: px-to-rem(8);\r\n          line-height: px-to-rem(16);\r\n          margin: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .box-info-image {\r\n    width: 30%;\r\n    background-position: center center;\r\n    overflow: hidden;\r\n\r\n    img {\r\n      width: 100%;\r\n      height: 100%;\r\n      object-fit: cover;\r\n      object-position: center;\r\n      min-height: 100%;\r\n      min-width: 100%;\r\n    }\r\n  }\r\n\r\n  .box-info-data {\r\n    width: 70%;\r\n    padding: 0 px-to-rem(20) 0 px-to-rem(30);\r\n\r\n    h2 {\r\n      @include font-title();\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      font-weight: 100;\r\n      text-align: left;\r\n      box-sizing: border-box;\r\n      font-size: px-to-rem(30);\r\n      margin: px-to-rem(-5) 0 px-to-rem(5) 0;\r\n    }\r\n\r\n    p {\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      color: $white;\r\n      text-align: left;\r\n      font-size: px-to-rem(10);\r\n      margin: 0;\r\n\r\n      &.box-info-desc {\r\n        margin: px-to-rem(20) 0 px-to-rem(20) 0;\r\n      }\r\n    }\r\n\r\n    .box-info-status {\r\n      position: relative;\r\n      float: left;\r\n    }\r\n\r\n    .box-info-status-top {\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      margin-top: px-to-rem(10);\r\n\r\n      ul {\r\n        position: relative;\r\n        float: left;\r\n        width: 100%;\r\n\r\n        li {\r\n          position: relative;\r\n          float: left;\r\n          width: 50%;\r\n          height: 160px;\r\n          box-sizing: border-box;\r\n\r\n          ul {\r\n            position: relative;\r\n            float: left;\r\n            width: 100%;\r\n\r\n            li {\r\n              position: relative;\r\n              float: left;\r\n              width: 33.333%;\r\n              height: auto;\r\n\r\n              text-align: left;\r\n            }\r\n          }\r\n        }\r\n\r\n        li:last-child {\r\n          border-left: 1px solid $white;\r\n          padding-left: px-to-rem(20);\r\n\r\n          ul {\r\n            li {\r\n              border-left: none;\r\n              padding-left: 0;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .box-info-status-top-title {\r\n        margin-bottom: px-to-rem(20);\r\n      }\r\n\r\n      .box-info-status-top-bid {\r\n        @include font-special();\r\n        font-size: px-to-rem(24);\r\n        color: $green;\r\n        margin: 0;\r\n      }\r\n\r\n      .box-info-status-top-counter {\r\n        @include font-special();\r\n        font-size: px-to-rem(24);\r\n        color: $green;\r\n      }\r\n\r\n      .box-info-status-info {\r\n        position: relative;\r\n        float: left;\r\n        width: 100%;\r\n        margin-top: 50px;\r\n        color: $gray;\r\n        text-align: left;\r\n        font-size: px-to-rem(12);\r\n      }\r\n    }\r\n\r\n    .box-info-status-bottom {\r\n      position: relative;\r\n      float: left;\r\n      width: 100%;\r\n      margin-top: 80px;\r\n\r\n      .box-info-button {\r\n        @include main-button;\r\n        position: relative;\r\n        float: left;\r\n        text-decoration: none;\r\n        width: 45%;\r\n        min-width: 200px;\r\n        max-width: 280px;\r\n\r\n        &.cta {\r\n          @include main-button-cta;\r\n          width: 50%;\r\n          margin: 0 px-to-rem(20) px-to-rem(20) 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.box-info.single {\r\n  .box-info-image {\r\n    width: 30%;\r\n    min-width: 300px;\r\n    max-width: 400px;\r\n    border: 1px $green solid;\r\n    align-self: stretch;\r\n  }\r\n\r\n  .box-info-data {\r\n    h2 {\r\n      font-size: px-to-rem(35);\r\n    }\r\n\r\n    p {\r\n      font-size: px-to-rem(12);\r\n\r\n      &.box-info-desc {\r\n        font-size: px-to-rem(14);\r\n        line-height: px-to-rem(18);\r\n\r\n        b {\r\n          color: $green;\r\n          font-weight: normal;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Sass Mixins\r\n//\r\n// More information about mixins in:\r\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\r\n// Add comment to every function\r\n@import 'vars.scss';\r\n\r\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-light();\r\n///   }\r\n@mixin font-light() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-regular();\r\n///   }\r\n@mixin font-regular() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 400;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-bold() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 500;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-title() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-h1() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-special() {\r\n  font-family: 'DigitalNumbers', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Improve animation performance for containers\r\n/// @example scss Input\r\n///   .card {\r\n///     @include gpu();\r\n///   }\r\n@mixin gpu {\r\n  backface-visibility: hidden;\r\n  transform-style: preserve-3d;\r\n  perspective: 1000px;\r\n\r\n  .safari & {\r\n    perspective: none; // otherwise text and icons become blurry\r\n  }\r\n}\r\n\r\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\r\n/// @parameter {Measure unit} $width - Specify width of the box\r\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\r\n/// @example scss Input\r\n///   .card {\r\n///     @include box(3.2rem);\r\n///   }\r\n///   .card-another {\r\n///     @include box(3.2rem, 2rem);\r\n///   }\r\n@mixin box($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\r\n/// @example scss Input\r\n///   section {\r\n///     height: pxToRem(200);\r\n///   }\r\n@function px-to-rem($px) {\r\n  @return $px * 0.1rem;\r\n}\r\n\r\n/// Set top and left to 0\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-0;\r\n///   }\r\n@mixin position-0 {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n/// Set full size of box and position\r\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-100(absolute);\r\n///   }\r\n@mixin position-100($pos: 'relative') {\r\n  position: $pos;\r\n  @include position-0;\r\n  @include box(100%);\r\n}\r\n\r\n/// Set display flex and center children horizontally and vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center;\r\n///   }\r\n@mixin flex-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/// Set display flex and center children vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-vert;\r\n///   }\r\n@mixin flex-center-vert {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/// Set display flex and center children horizontally\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-horiz;\r\n///   }\r\n@mixin flex-center-horiz {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/// Center its element (horizontally and vertically) by using transform\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center;\r\n///   }\r\n@mixin transform-center {\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n}\r\n\r\n/// Set vertical center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-vert;\r\n///   }\r\n@mixin transform-center-vert {\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Set horizontal center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-horiz;\r\n///   }\r\n@mixin transform-center-horiz {\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n/// Set z-index value in order of $element variable\r\n/// @example scss Input\r\n///   element {\r\n///     @include z-index(preloader);\r\n///   }\r\n@mixin z-index($id) {\r\n  z-index: index($elements, $id);\r\n}\r\n\r\n/// Reset button's look\r\n/// @example scss Input\r\n///   button {\r\n///     @include reset-button;\r\n///   }\r\n@mixin reset-button {\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  padding: 0;\r\n  text-align: inherit;\r\n  letter-spacing: inherit;\r\n  font-size: inherit;\r\n  text-transform: inherit;\r\n  color: inherit;\r\n}\r\n\r\n@mixin title {\r\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\r\n  @include font-title;\r\n  text-transform: uppercase;\r\n  color: $pink;\r\n  font-size: px-to-rem(24);\r\n  line-height: px-to-rem(20);\r\n  text-align: left;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@mixin main-button {\r\n  background-color: transparent;\r\n  padding: px-to-rem(13) px-to-rem(35);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background-color: $greentint-dark;\r\n    background-color: $green;\r\n    color: $black;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin main-button-cta {\r\n  background-color: $green;\r\n  padding: px-to-rem(13) px-to-rem(20);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $pink;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: $pink;\r\n    color: $black;\r\n    border: 1px $pink solid;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin item-button {\r\n  text-transform: uppercase;\r\n  padding: px-to-rem(3) px-to-rem(3);\r\n  background-color: transparent;\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  &.active {\r\n    text-transform: none;\r\n    background-color: $green;\r\n    color: $black;\r\n  }\r\n\r\n  &.active:hover {\r\n    cursor: pointer;\r\n    border: 1px $pink solid;\r\n    background-color: $pink;\r\n    color: $black;\r\n  }\r\n\r\n  &.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n","@import 'layout.scss';\r\n\r\n$base-image-path: '../../assets/images/';\r\n\r\n// Variables\r\n//\r\n// Add global variables here, color palette, those variables shared by components all applied to global styling\r\n\r\n// ====================================================================\r\n// Breakpoints\r\n//\r\n// Window breakpoints\r\n// ====================================================================\r\n$layout-medium: map-get($layout, medium) + px;\r\n$layout-large: map-get($layout, large) + px;\r\n$layout-xlarge: map-get($layout, xlarge) + px;\r\n\r\n// ====================================================================\r\n// Base palette\r\n//\r\n// Grayscale and brand colors for use across the site.\r\n// ====================================================================\r\n$white: #fff;\r\n$black: #000;\r\n$blacktint: rgba(0, 0, 0, 0.8);\r\n$green: #42ff00;\r\n$greentint: rgba(#42ff00, 0.1);\r\n$greentint-dark: rgba(#42ff00, 0.3);\r\n$pink: #fa00ff;\r\n$gray: rgba(255, 255, 255, 0.3);\r\n\r\n// ====================================================================\r\n// General\r\n//\r\n// Global color variables, used usually in sections\r\n// Global variables used across the web app\r\n// ====================================================================\r\n$page-bg-color: $white;\r\n$rotate-screen-bg-color: $black;\r\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\r\n$generic-fonts: Helvetica, Arial, sans-serif;\r\n\r\n// ====================================================================\r\n// Nav bar\r\n// ====================================================================\r\n$navbar-height-mobile: px-to-rem(130);\r\n$navbar-height-desktop: px-to-rem(130);\r\n$navbar-padding-mobile: 2rem;\r\n$navbar-padding-desktop: 4rem;\r\n\r\n// ====================================================================\r\n// List of z-index element\r\n// ====================================================================\r\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\r\n","@import 'src/style/shared.scss';\r\n\r\n.Leaderboard-content {\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n","@import 'src/style/shared.scss';\r\n\r\n.Asset {\r\n  position: relative;\r\n  float: left;\r\n  width: 100%;\r\n  background-color: transparent;\r\n  z-index: 50;\r\n  color: $green;\r\n  padding: px-to-rem(20) $navbar-padding-mobile;\r\n\r\n  @media (min-width: $layout-large) {\r\n    padding: px-to-rem(20) $navbar-padding-desktop;\r\n  }\r\n\r\n  &-container {\r\n    position: relative;\r\n    float: left;\r\n    width: 100%;\r\n    margin: px-to-rem(0) 0 0 0;\r\n    border: 1px $green solid;\r\n    padding: px-to-rem(20);\r\n    background-color: $blacktint;\r\n\r\n    &.leaderboard {\r\n      margin-top: px-to-rem(20);\r\n\r\n      h1 {\r\n        @include title;\r\n      }\r\n    }\r\n\r\n    @media (min-width: $layout-large) {\r\n      padding: px-to-rem(30);\r\n    }\r\n  }\r\n}\r\n","@import 'layout.scss';\r\n\r\n$base-image-path: '../../assets/images/';\r\n\r\n// Variables\r\n//\r\n// Add global variables here, color palette, those variables shared by components all applied to global styling\r\n\r\n// ====================================================================\r\n// Breakpoints\r\n//\r\n// Window breakpoints\r\n// ====================================================================\r\n$layout-medium: map-get($layout, medium) + px;\r\n$layout-large: map-get($layout, large) + px;\r\n$layout-xlarge: map-get($layout, xlarge) + px;\r\n\r\n// ====================================================================\r\n// Base palette\r\n//\r\n// Grayscale and brand colors for use across the site.\r\n// ====================================================================\r\n$white: #fff;\r\n$black: #000;\r\n$blacktint: rgba(0, 0, 0, 0.8);\r\n$green: #42ff00;\r\n$greentint: rgba(#42ff00, 0.1);\r\n$greentint-dark: rgba(#42ff00, 0.3);\r\n$pink: #fa00ff;\r\n$gray: rgba(255, 255, 255, 0.3);\r\n\r\n// ====================================================================\r\n// General\r\n//\r\n// Global color variables, used usually in sections\r\n// Global variables used across the web app\r\n// ====================================================================\r\n$page-bg-color: $white;\r\n$rotate-screen-bg-color: $black;\r\n$element-shadow: 0 16px 16px 0 rgba(0, 0, 0, 0.04);\r\n$generic-fonts: Helvetica, Arial, sans-serif;\r\n\r\n// ====================================================================\r\n// Nav bar\r\n// ====================================================================\r\n$navbar-height-mobile: px-to-rem(130);\r\n$navbar-height-desktop: px-to-rem(130);\r\n$navbar-padding-mobile: 2rem;\r\n$navbar-padding-desktop: 4rem;\r\n\r\n// ====================================================================\r\n// List of z-index element\r\n// ====================================================================\r\n$elements: pages, page-overlay, main-nav, sidebar, preloader, rotate, footer, footer-nav;\r\n","// Sass Mixins\r\n//\r\n// More information about mixins in:\r\n// http://sass-lang.com/documentation/file.SASS_REFERENCE.html#mixins\r\n// Add comment to every function\r\n@import 'vars.scss';\r\n\r\n/// Set Light Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-light();\r\n///   }\r\n@mixin font-light() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Regular Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-regular();\r\n///   }\r\n@mixin font-regular() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 400;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-bold() {\r\n  font-family: 'Aldrich', #{$generic-fonts};\r\n  font-weight: 500;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-title() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-h1() {\r\n  font-family: 'Orbitron', #{$generic-fonts};\r\n  letter-spacing: 3px;\r\n  font-weight: 100;\r\n}\r\n\r\n/// Set Bold Font as font family. This mixin's name is generic to abstract the font family name in case it changes\r\n/// @group Fonts\r\n/// @example scss Input\r\n///   .landing-section {\r\n///     @include font-bold();\r\n///   }\r\n@mixin font-special() {\r\n  font-family: 'DigitalNumbers', #{$generic-fonts};\r\n  font-weight: 100;\r\n}\r\n\r\n/// Improve animation performance for containers\r\n/// @example scss Input\r\n///   .card {\r\n///     @include gpu();\r\n///   }\r\n@mixin gpu {\r\n  backface-visibility: hidden;\r\n  transform-style: preserve-3d;\r\n  perspective: 1000px;\r\n\r\n  .safari & {\r\n    perspective: none; // otherwise text and icons become blurry\r\n  }\r\n}\r\n\r\n/// Set exactly the same width and height of a component, avoid repeat the same dimension\r\n/// @parameter {Measure unit} $width - Specify width of the box\r\n/// @parameter {Measure unit} $height [$width] - Specify height of the box, the default value is the width\r\n/// @example scss Input\r\n///   .card {\r\n///     @include box(3.2rem);\r\n///   }\r\n///   .card-another {\r\n///     @include box(3.2rem, 2rem);\r\n///   }\r\n@mixin box($width, $height: $width) {\r\n  width: $width;\r\n  height: $height;\r\n}\r\n\r\n/// Convert the pixels to rem for in a specific resolution, usually 1440px wide\r\n/// @example scss Input\r\n///   section {\r\n///     height: pxToRem(200);\r\n///   }\r\n@function px-to-rem($px) {\r\n  @return $px * 0.1rem;\r\n}\r\n\r\n/// Set top and left to 0\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-0;\r\n///   }\r\n@mixin position-0 {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n/// Set full size of box and position\r\n/// @parameter {string} $pos - one of relative, absolute, fixed. relative by default\r\n/// @example scss Input\r\n///   element {\r\n///     @include position-100(absolute);\r\n///   }\r\n@mixin position-100($pos: 'relative') {\r\n  position: $pos;\r\n  @include position-0;\r\n  @include box(100%);\r\n}\r\n\r\n/// Set display flex and center children horizontally and vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center;\r\n///   }\r\n@mixin flex-center {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n/// Set display flex and center children vertically\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-vert;\r\n///   }\r\n@mixin flex-center-vert {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n/// Set display flex and center children horizontally\r\n/// @example scss Input\r\n///   element {\r\n///     @include flex-center-horiz;\r\n///   }\r\n@mixin flex-center-horiz {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n/// Center its element (horizontally and vertically) by using transform\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center;\r\n///   }\r\n@mixin transform-center {\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%) translateY(-50%);\r\n}\r\n\r\n/// Set vertical center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-vert;\r\n///   }\r\n@mixin transform-center-vert {\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/// Set horizontal center of its element\r\n/// @example scss Input\r\n///   element {\r\n///     @include transform-center-horiz;\r\n///   }\r\n@mixin transform-center-horiz {\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n/// Set z-index value in order of $element variable\r\n/// @example scss Input\r\n///   element {\r\n///     @include z-index(preloader);\r\n///   }\r\n@mixin z-index($id) {\r\n  z-index: index($elements, $id);\r\n}\r\n\r\n/// Reset button's look\r\n/// @example scss Input\r\n///   button {\r\n///     @include reset-button;\r\n///   }\r\n@mixin reset-button {\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: transparent;\r\n  padding: 0;\r\n  text-align: inherit;\r\n  letter-spacing: inherit;\r\n  font-size: inherit;\r\n  text-transform: inherit;\r\n  color: inherit;\r\n}\r\n\r\n@mixin title {\r\n  margin: px-to-rem(0) 0 px-to-rem(30) 0;\r\n  @include font-title;\r\n  text-transform: uppercase;\r\n  color: $pink;\r\n  font-size: px-to-rem(24);\r\n  line-height: px-to-rem(20);\r\n  text-align: left;\r\n  box-sizing: border-box;\r\n}\r\n\r\n@mixin main-button {\r\n  background-color: transparent;\r\n  padding: px-to-rem(13) px-to-rem(35);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    // background-color: $greentint-dark;\r\n    background-color: $green;\r\n    color: $black;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin main-button-cta {\r\n  background-color: $green;\r\n  padding: px-to-rem(13) px-to-rem(20);\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $pink;\r\n\r\n  a {\r\n    color: $green;\r\n  }\r\n\r\n  &:hover {\r\n    cursor: pointer;\r\n    background-color: $pink;\r\n    color: $black;\r\n    border: 1px $pink solid;\r\n\r\n    a {\r\n      color: $black;\r\n    }\r\n  }\r\n\r\n  a.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n@mixin item-button {\r\n  text-transform: uppercase;\r\n  padding: px-to-rem(3) px-to-rem(3);\r\n  background-color: transparent;\r\n  border: 1px $green solid;\r\n  box-sizing: border-box;\r\n  color: $green;\r\n\r\n  &.active {\r\n    text-transform: none;\r\n    background-color: $green;\r\n    color: $black;\r\n  }\r\n\r\n  &.active:hover {\r\n    cursor: pointer;\r\n    border: 1px $pink solid;\r\n    background-color: $pink;\r\n    color: $black;\r\n  }\r\n\r\n  &.active {\r\n    text-decoration: none;\r\n  }\r\n}\r\n"]}